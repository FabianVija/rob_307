// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "doKmean.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic doKmean::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic doKmean::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<80> doKmean::ap_ST_fsm_state1 = "1";
const sc_lv<80> doKmean::ap_ST_fsm_state2 = "10";
const sc_lv<80> doKmean::ap_ST_fsm_state3 = "100";
const sc_lv<80> doKmean::ap_ST_fsm_state4 = "1000";
const sc_lv<80> doKmean::ap_ST_fsm_state5 = "10000";
const sc_lv<80> doKmean::ap_ST_fsm_state6 = "100000";
const sc_lv<80> doKmean::ap_ST_fsm_state7 = "1000000";
const sc_lv<80> doKmean::ap_ST_fsm_state8 = "10000000";
const sc_lv<80> doKmean::ap_ST_fsm_state9 = "100000000";
const sc_lv<80> doKmean::ap_ST_fsm_state10 = "1000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state11 = "10000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state12 = "100000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<80> doKmean::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> doKmean::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> doKmean::ap_const_lv1_0 = "0";
const sc_lv<1> doKmean::ap_const_lv1_1 = "1";
const sc_lv<2> doKmean::ap_const_lv2_0 = "00";
const sc_lv<2> doKmean::ap_const_lv2_2 = "10";
const sc_lv<2> doKmean::ap_const_lv2_3 = "11";
const sc_lv<2> doKmean::ap_const_lv2_1 = "1";
const sc_lv<5> doKmean::ap_const_lv5_0 = "00000";
const sc_lv<6> doKmean::ap_const_lv6_0 = "000000";
const sc_lv<32> doKmean::ap_const_lv32_3 = "11";
const sc_lv<32> doKmean::ap_const_lv32_6 = "110";
const sc_lv<32> doKmean::ap_const_lv32_8 = "1000";
const sc_lv<32> doKmean::ap_const_lv32_4E = "1001110";
const sc_lv<32> doKmean::ap_const_lv32_4F = "1001111";
const int doKmean::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> doKmean::ap_const_lv32_C = "1100";
const sc_lv<32> doKmean::ap_const_lv32_2D = "101101";
const sc_lv<32> doKmean::ap_const_lv32_11 = "10001";
const sc_lv<32> doKmean::ap_const_lv32_32 = "110010";
const sc_lv<32> doKmean::ap_const_lv32_3B = "111011";
const sc_lv<32> doKmean::ap_const_lv32_1 = "1";
const sc_lv<32> doKmean::ap_const_lv32_2 = "10";
const sc_lv<32> doKmean::ap_const_lv32_4 = "100";
const sc_lv<32> doKmean::ap_const_lv32_5 = "101";
const sc_lv<32> doKmean::ap_const_lv32_7 = "111";
const sc_lv<32> doKmean::ap_const_lv32_9 = "1001";
const sc_lv<32> doKmean::ap_const_lv32_A = "1010";
const sc_lv<32> doKmean::ap_const_lv32_B = "1011";
const sc_lv<32> doKmean::ap_const_lv32_15 = "10101";
const sc_lv<32> doKmean::ap_const_lv32_1A = "11010";
const sc_lv<32> doKmean::ap_const_lv32_25 = "100101";
const sc_lv<32> doKmean::ap_const_lv32_26 = "100110";
const sc_lv<32> doKmean::ap_const_lv32_27 = "100111";
const sc_lv<32> doKmean::ap_const_lv32_29 = "101001";
const sc_lv<32> doKmean::ap_const_lv32_2A = "101010";
const sc_lv<32> doKmean::ap_const_lv32_2B = "101011";
const sc_lv<32> doKmean::ap_const_lv32_2C = "101100";
const sc_lv<32> doKmean::ap_const_lv32_34 = "110100";
const sc_lv<32> doKmean::ap_const_lv32_35 = "110101";
const sc_lv<32> doKmean::ap_const_lv32_36 = "110110";
const sc_lv<32> doKmean::ap_const_lv32_3A = "111010";
const sc_lv<32> doKmean::ap_const_lv32_4B = "1001011";
const sc_lv<32> doKmean::ap_const_lv32_4D = "1001101";
const sc_lv<10> doKmean::ap_const_lv10_0 = "0000000000";
const sc_lv<16> doKmean::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> doKmean::ap_const_lv32_28 = "101000";
const sc_lv<32> doKmean::ap_const_lv32_51BA43B7 = "1010001101110100100001110110111";
const sc_lv<32> doKmean::ap_const_lv32_33 = "110011";
const sc_lv<32> doKmean::ap_const_lv32_4C = "1001100";
const sc_lv<10> doKmean::ap_const_lv10_14 = "10100";
const sc_lv<32> doKmean::ap_const_lv32_D = "1101";
const sc_lv<32> doKmean::ap_const_lv32_16 = "10110";
const sc_lv<32> doKmean::ap_const_lv32_2E = "101110";
const sc_lv<32> doKmean::ap_const_lv32_12 = "10010";
const sc_lv<32> doKmean::ap_const_lv32_3C = "111100";
const sc_lv<16> doKmean::ap_const_lv16_32 = "110010";
const sc_lv<10> doKmean::ap_const_lv10_3E8 = "1111101000";
const sc_lv<10> doKmean::ap_const_lv10_1 = "1";
const sc_lv<32> doKmean::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> doKmean::ap_const_lv32_1F = "11111";
const sc_lv<31> doKmean::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<6> doKmean::ap_const_lv6_32 = "110010";
const sc_lv<6> doKmean::ap_const_lv6_1 = "1";
const sc_lv<10> doKmean::ap_const_lv10_32 = "110010";
const sc_lv<5> doKmean::ap_const_lv5_14 = "10100";
const sc_lv<5> doKmean::ap_const_lv5_1 = "1";
const sc_lv<32> doKmean::ap_const_lv32_17 = "10111";
const sc_lv<32> doKmean::ap_const_lv32_1E = "11110";
const sc_lv<8> doKmean::ap_const_lv8_FF = "11111111";
const sc_lv<23> doKmean::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> doKmean::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const sc_lv<5> doKmean::ap_const_lv5_15 = "10101";
const sc_lv<11> doKmean::ap_const_lv11_32 = "110010";
const sc_lv<5> doKmean::ap_const_lv5_4 = "100";
const bool doKmean::ap_const_boolean_1 = true;

doKmean::doKmean(sc_module_name name) : sc_module(name), mVcdFile(0) {
    points_U = new doKmean_points("points_U");
    points_U->clk(ap_clk);
    points_U->reset(ap_rst_n_inv);
    points_U->address0(points_address0);
    points_U->ce0(points_ce0);
    points_U->we0(points_we0);
    points_U->d0(points_d0);
    points_U->q0(points_q0);
    points_U->address1(points_address1);
    points_U->ce1(points_ce1);
    points_U->q1(points_q1);
    centroids_U = new doKmean_centroids("centroids_U");
    centroids_U->clk(ap_clk);
    centroids_U->reset(ap_rst_n_inv);
    centroids_U->address0(centroids_address0);
    centroids_U->ce0(centroids_ce0);
    centroids_U->we0(centroids_we0);
    centroids_U->d0(centroids_d0);
    centroids_U->q0(centroids_q0);
    centroids_U->address1(centroids_address1);
    centroids_U->ce1(centroids_ce1);
    centroids_U->we1(centroids_we1);
    centroids_U->d1(tmp_20_reg_1625);
    centroids_U->q1(centroids_q1);
    results_U = new doKmean_results("results_U");
    results_U->clk(ap_clk);
    results_U->reset(ap_rst_n_inv);
    results_U->address0(results_address0);
    results_U->ce0(results_ce0);
    results_U->we0(results_we0);
    results_U->d0(results_d0);
    results_U->q0(results_q0);
    np_cluster_U = new doKmean_np_cluster("np_cluster_U");
    np_cluster_U->clk(ap_clk);
    np_cluster_U->reset(ap_rst_n_inv);
    np_cluster_U->address0(np_cluster_address0);
    np_cluster_U->ce0(np_cluster_ce0);
    np_cluster_U->we0(np_cluster_we0);
    np_cluster_U->d0(np_cluster_d0);
    np_cluster_U->q0(np_cluster_q0);
    new_centroids_U = new doKmean_new_centrbkb("new_centroids_U");
    new_centroids_U->clk(ap_clk);
    new_centroids_U->reset(ap_rst_n_inv);
    new_centroids_U->address0(new_centroids_address0);
    new_centroids_U->ce0(new_centroids_ce0);
    new_centroids_U->we0(new_centroids_we0);
    new_centroids_U->d0(new_centroids_d0);
    new_centroids_U->q0(new_centroids_q0);
    doKmean_CRTL_BUS_s_axi_U = new doKmean_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>("doKmean_CRTL_BUS_s_axi_U");
    doKmean_CRTL_BUS_s_axi_U->AWVALID(s_axi_CRTL_BUS_AWVALID);
    doKmean_CRTL_BUS_s_axi_U->AWREADY(s_axi_CRTL_BUS_AWREADY);
    doKmean_CRTL_BUS_s_axi_U->AWADDR(s_axi_CRTL_BUS_AWADDR);
    doKmean_CRTL_BUS_s_axi_U->WVALID(s_axi_CRTL_BUS_WVALID);
    doKmean_CRTL_BUS_s_axi_U->WREADY(s_axi_CRTL_BUS_WREADY);
    doKmean_CRTL_BUS_s_axi_U->WDATA(s_axi_CRTL_BUS_WDATA);
    doKmean_CRTL_BUS_s_axi_U->WSTRB(s_axi_CRTL_BUS_WSTRB);
    doKmean_CRTL_BUS_s_axi_U->ARVALID(s_axi_CRTL_BUS_ARVALID);
    doKmean_CRTL_BUS_s_axi_U->ARREADY(s_axi_CRTL_BUS_ARREADY);
    doKmean_CRTL_BUS_s_axi_U->ARADDR(s_axi_CRTL_BUS_ARADDR);
    doKmean_CRTL_BUS_s_axi_U->RVALID(s_axi_CRTL_BUS_RVALID);
    doKmean_CRTL_BUS_s_axi_U->RREADY(s_axi_CRTL_BUS_RREADY);
    doKmean_CRTL_BUS_s_axi_U->RDATA(s_axi_CRTL_BUS_RDATA);
    doKmean_CRTL_BUS_s_axi_U->RRESP(s_axi_CRTL_BUS_RRESP);
    doKmean_CRTL_BUS_s_axi_U->BVALID(s_axi_CRTL_BUS_BVALID);
    doKmean_CRTL_BUS_s_axi_U->BREADY(s_axi_CRTL_BUS_BREADY);
    doKmean_CRTL_BUS_s_axi_U->BRESP(s_axi_CRTL_BUS_BRESP);
    doKmean_CRTL_BUS_s_axi_U->ACLK(ap_clk);
    doKmean_CRTL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    doKmean_CRTL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    doKmean_CRTL_BUS_s_axi_U->ap_start(ap_start);
    doKmean_CRTL_BUS_s_axi_U->interrupt(interrupt);
    doKmean_CRTL_BUS_s_axi_U->ap_ready(ap_ready);
    doKmean_CRTL_BUS_s_axi_U->ap_done(ap_done);
    doKmean_CRTL_BUS_s_axi_U->ap_idle(ap_idle);
    doKmean_CRTL_BUS_s_axi_U->gain(gain);
    doKmean_faddfsub_cud_U1 = new doKmean_faddfsub_cud<1,5,32,32,32>("doKmean_faddfsub_cud_U1");
    doKmean_faddfsub_cud_U1->clk(ap_clk);
    doKmean_faddfsub_cud_U1->reset(ap_rst_n_inv);
    doKmean_faddfsub_cud_U1->din0(grp_fu_631_p0);
    doKmean_faddfsub_cud_U1->din1(grp_fu_631_p1);
    doKmean_faddfsub_cud_U1->opcode(grp_fu_631_opcode);
    doKmean_faddfsub_cud_U1->ce(ap_var_for_const0);
    doKmean_faddfsub_cud_U1->dout(grp_fu_631_p2);
    doKmean_fsub_32nsdEe_U2 = new doKmean_fsub_32nsdEe<1,5,32,32,32>("doKmean_fsub_32nsdEe_U2");
    doKmean_fsub_32nsdEe_U2->clk(ap_clk);
    doKmean_fsub_32nsdEe_U2->reset(ap_rst_n_inv);
    doKmean_fsub_32nsdEe_U2->din0(points_load_2_reg_1475);
    doKmean_fsub_32nsdEe_U2->din1(centroids_load_1_reg_1480);
    doKmean_fsub_32nsdEe_U2->ce(ap_var_for_const0);
    doKmean_fsub_32nsdEe_U2->dout(grp_fu_635_p2);
    doKmean_fmul_32nseOg_U3 = new doKmean_fmul_32nseOg<1,4,32,32,32>("doKmean_fmul_32nseOg_U3");
    doKmean_fmul_32nseOg_U3->clk(ap_clk);
    doKmean_fmul_32nseOg_U3->reset(ap_rst_n_inv);
    doKmean_fmul_32nseOg_U3->din0(reg_678);
    doKmean_fmul_32nseOg_U3->din1(tmp_6_i_reg_1485);
    doKmean_fmul_32nseOg_U3->ce(ap_var_for_const0);
    doKmean_fmul_32nseOg_U3->dout(grp_fu_640_p2);
    doKmean_fdiv_32nsfYi_U4 = new doKmean_fdiv_32nsfYi<1,16,32,32,32>("doKmean_fdiv_32nsfYi_U4");
    doKmean_fdiv_32nsfYi_U4->clk(ap_clk);
    doKmean_fdiv_32nsfYi_U4->reset(ap_rst_n_inv);
    doKmean_fdiv_32nsfYi_U4->din0(reg_684);
    doKmean_fdiv_32nsfYi_U4->din1(tmp_19_reg_1620);
    doKmean_fdiv_32nsfYi_U4->ce(ap_var_for_const0);
    doKmean_fdiv_32nsfYi_U4->dout(grp_fu_644_p2);
    doKmean_sitofp_32g8j_U5 = new doKmean_sitofp_32g8j<1,6,32,32>("doKmean_sitofp_32g8j_U5");
    doKmean_sitofp_32g8j_U5->clk(ap_clk);
    doKmean_sitofp_32g8j_U5->reset(ap_rst_n_inv);
    doKmean_sitofp_32g8j_U5->din0(np_cluster_q0);
    doKmean_sitofp_32g8j_U5->ce(ap_var_for_const0);
    doKmean_sitofp_32g8j_U5->dout(grp_fu_648_p1);
    doKmean_fcmp_32nshbi_U6 = new doKmean_fcmp_32nshbi<1,1,32,32,1>("doKmean_fcmp_32nshbi_U6");
    doKmean_fcmp_32nshbi_U6->din0(distance_2_reg_1500);
    doKmean_fcmp_32nshbi_U6->din1(min_distance_i_reg_493);
    doKmean_fcmp_32nshbi_U6->opcode(ap_var_for_const1);
    doKmean_fcmp_32nshbi_U6->dout(tmp_36_fu_652_p2);
    doKmean_fsqrt_32nibs_U7 = new doKmean_fsqrt_32nibs<1,12,32,32,32>("doKmean_fsqrt_32nibs_U7");
    doKmean_fsqrt_32nibs_U7->clk(ap_clk);
    doKmean_fsqrt_32nibs_U7->reset(ap_rst_n_inv);
    doKmean_fsqrt_32nibs_U7->din0(ap_var_for_const2);
    doKmean_fsqrt_32nibs_U7->din1(distance_i_reg_528);
    doKmean_fsqrt_32nibs_U7->ce(ap_var_for_const0);
    doKmean_fsqrt_32nibs_U7->dout(grp_fu_657_p2);
    doKmean_mac_muladjbC_U8 = new doKmean_mac_muladjbC<1,1,7,11,6,11>("doKmean_mac_muladjbC_U8");
    doKmean_mac_muladjbC_U8->din0(grp_fu_1310_p0);
    doKmean_mac_muladjbC_U8->din1(tmp_27_reg_1559);
    doKmean_mac_muladjbC_U8->din2(grp_fu_1310_p2);
    doKmean_mac_muladjbC_U8->dout(grp_fu_1310_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state78);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_done);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( exitcond_fu_1262_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( exitcond_fu_1262_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_c_1_fu_1225_p2);
    sensitive << ( c_reg_586 );

    SC_METHOD(thread_c_2_fu_956_p2);
    sensitive << ( cluster_1_reg_505 );

    SC_METHOD(thread_centroids_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_41_cast_fu_888_p1 );
    sensitive << ( tmp_48_cast_fu_988_p1 );

    SC_METHOD(thread_centroids_address1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_51_cast_reg_1610 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( tmp_48_cast_fu_988_p1 );

    SC_METHOD(thread_centroids_ce0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_centroids_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_centroids_d0);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_centroids_we0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_centroids_we1);
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_cluster_1_cast7_fu_946_p1);
    sensitive << ( cluster_1_reg_505 );

    SC_METHOD(thread_cluster_2_fu_1087_p3);
    sensitive << ( cluster_1_cast7_reg_1432 );
    sensitive << ( cluster_reg_480 );
    sensitive << ( tmp_37_fu_1081_p2 );

    SC_METHOD(thread_distance_1_to_int_fu_1004_p1);
    sensitive << ( distance_2_reg_1500 );

    SC_METHOD(thread_end_cast_fu_936_p1);
    sensitive << ( end_fu_174 );

    SC_METHOD(thread_exitcond10_fu_1236_p2);
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( f_reg_609 );

    SC_METHOD(thread_exitcond1_fu_696_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_376 );

    SC_METHOD(thread_exitcond1_i_fu_950_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( cluster_1_reg_505 );

    SC_METHOD(thread_exitcond2_fu_733_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_400 );

    SC_METHOD(thread_exitcond3_fu_849_p2);
    sensitive << ( icmp_reg_1342 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_reg_411 );

    SC_METHOD(thread_exitcond4_fu_861_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j2_reg_434 );

    SC_METHOD(thread_exitcond5_fu_892_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i5_reg_445 );

    SC_METHOD(thread_exitcond6_fu_920_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i7_reg_457 );

    SC_METHOD(thread_exitcond7_fu_1130_p2);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( i8_reg_551 );

    SC_METHOD(thread_exitcond8_fu_1174_p2);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( j9_reg_574 );

    SC_METHOD(thread_exitcond9_fu_1219_p2);
    sensitive << ( tmp_10_reg_1543 );
    sensitive << ( icmp1_reg_1547 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( c_reg_586 );

    SC_METHOD(thread_exitcond_fu_1262_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( idx_reg_620 );

    SC_METHOD(thread_exitcond_i_fu_962_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( j_i_reg_540 );

    SC_METHOD(thread_f_1_fu_1242_p2);
    sensitive << ( f_reg_609 );

    SC_METHOD(thread_gain_off1_fu_1153_p2);
    sensitive << ( gain_read_reg_1318 );

    SC_METHOD(thread_gain_off_fu_712_p2);
    sensitive << ( gain_read_reg_1318 );

    SC_METHOD(thread_grp_fu_1310_p0);
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_fu_1310_p2);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( grp_fu_1310_p20 );

    SC_METHOD(thread_grp_fu_1310_p20);
    sensitive << ( j9_reg_574 );

    SC_METHOD(thread_grp_fu_631_opcode);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_grp_fu_631_p0);
    sensitive << ( reg_671 );
    sensitive << ( reg_684 );
    sensitive << ( distance_i_reg_528 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_grp_fu_631_p1);
    sensitive << ( reg_671 );
    sensitive << ( centroids_load_reg_1470 );
    sensitive << ( tmp_7_i_reg_1490 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_i_1_fu_702_p2);
    sensitive << ( i_reg_376 );

    SC_METHOD(thread_i_2_fu_855_p2);
    sensitive << ( i1_reg_411 );

    SC_METHOD(thread_i_3_fu_898_p2);
    sensitive << ( i5_reg_445 );

    SC_METHOD(thread_i_4_fu_926_p2);
    sensitive << ( i7_reg_457 );

    SC_METHOD(thread_i_5_fu_1136_p2);
    sensitive << ( i8_reg_551 );

    SC_METHOD(thread_icmp1_fu_1168_p2);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( exitcond7_fu_1130_p2 );
    sensitive << ( tmp_10_fu_1147_p2 );
    sensitive << ( tmp_24_fu_1158_p4 );

    SC_METHOD(thread_icmp_fu_727_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_696_p2 );
    sensitive << ( tmp_fu_717_p4 );

    SC_METHOD(thread_idx_1_fu_1268_p2);
    sensitive << ( idx_reg_620 );

    SC_METHOD(thread_inStream_TDATA_blk_n);
    sensitive << ( inStream_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_inStream_TREADY);
    sensitive << ( inStream_V_dest_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_in);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_inStream_V_data_V_0_data_out);
    sensitive << ( inStream_V_data_V_0_payload_A );
    sensitive << ( inStream_V_data_V_0_payload_B );
    sensitive << ( inStream_V_data_V_0_sel );

    SC_METHOD(thread_inStream_V_data_V_0_load_A);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_load_B);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_sel);
    sensitive << ( inStream_V_data_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_data_V_0_state_cmp_full);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_data_V_0_vld_out);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_dest_V_0_ack_in);
    sensitive << ( inStream_V_dest_V_0_state );

    SC_METHOD(thread_inStream_V_dest_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_inStream_V_dest_V_0_data_out);
    sensitive << ( inStream_V_dest_V_0_payload_A );
    sensitive << ( inStream_V_dest_V_0_payload_B );
    sensitive << ( inStream_V_dest_V_0_sel );

    SC_METHOD(thread_inStream_V_dest_V_0_load_A);
    sensitive << ( inStream_V_dest_V_0_sel_wr );
    sensitive << ( inStream_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_dest_V_0_load_B);
    sensitive << ( inStream_V_dest_V_0_sel_wr );
    sensitive << ( inStream_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_dest_V_0_sel);
    sensitive << ( inStream_V_dest_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_dest_V_0_state_cmp_full);
    sensitive << ( inStream_V_dest_V_0_state );

    SC_METHOD(thread_inStream_V_dest_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_dest_V_0_vld_out);
    sensitive << ( inStream_V_dest_V_0_state );

    SC_METHOD(thread_inStream_V_id_V_0_ack_in);
    sensitive << ( inStream_V_id_V_0_state );

    SC_METHOD(thread_inStream_V_id_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_inStream_V_id_V_0_data_out);
    sensitive << ( inStream_V_id_V_0_payload_A );
    sensitive << ( inStream_V_id_V_0_payload_B );
    sensitive << ( inStream_V_id_V_0_sel );

    SC_METHOD(thread_inStream_V_id_V_0_load_A);
    sensitive << ( inStream_V_id_V_0_sel_wr );
    sensitive << ( inStream_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_id_V_0_load_B);
    sensitive << ( inStream_V_id_V_0_sel_wr );
    sensitive << ( inStream_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_id_V_0_sel);
    sensitive << ( inStream_V_id_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_id_V_0_state_cmp_full);
    sensitive << ( inStream_V_id_V_0_state );

    SC_METHOD(thread_inStream_V_id_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_id_V_0_vld_out);
    sensitive << ( inStream_V_id_V_0_state );

    SC_METHOD(thread_inStream_V_keep_V_0_ack_in);
    sensitive << ( inStream_V_keep_V_0_state );

    SC_METHOD(thread_inStream_V_keep_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_inStream_V_keep_V_0_data_out);
    sensitive << ( inStream_V_keep_V_0_payload_A );
    sensitive << ( inStream_V_keep_V_0_payload_B );
    sensitive << ( inStream_V_keep_V_0_sel );

    SC_METHOD(thread_inStream_V_keep_V_0_load_A);
    sensitive << ( inStream_V_keep_V_0_sel_wr );
    sensitive << ( inStream_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_keep_V_0_load_B);
    sensitive << ( inStream_V_keep_V_0_sel_wr );
    sensitive << ( inStream_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_keep_V_0_sel);
    sensitive << ( inStream_V_keep_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_keep_V_0_state_cmp_full);
    sensitive << ( inStream_V_keep_V_0_state );

    SC_METHOD(thread_inStream_V_keep_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_keep_V_0_vld_out);
    sensitive << ( inStream_V_keep_V_0_state );

    SC_METHOD(thread_inStream_V_strb_V_0_ack_in);
    sensitive << ( inStream_V_strb_V_0_state );

    SC_METHOD(thread_inStream_V_strb_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_inStream_V_strb_V_0_data_out);
    sensitive << ( inStream_V_strb_V_0_payload_A );
    sensitive << ( inStream_V_strb_V_0_payload_B );
    sensitive << ( inStream_V_strb_V_0_sel );

    SC_METHOD(thread_inStream_V_strb_V_0_load_A);
    sensitive << ( inStream_V_strb_V_0_sel_wr );
    sensitive << ( inStream_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_strb_V_0_load_B);
    sensitive << ( inStream_V_strb_V_0_sel_wr );
    sensitive << ( inStream_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_strb_V_0_sel);
    sensitive << ( inStream_V_strb_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_strb_V_0_state_cmp_full);
    sensitive << ( inStream_V_strb_V_0_state );

    SC_METHOD(thread_inStream_V_strb_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_strb_V_0_vld_out);
    sensitive << ( inStream_V_strb_V_0_state );

    SC_METHOD(thread_inStream_V_user_V_0_ack_in);
    sensitive << ( inStream_V_user_V_0_state );

    SC_METHOD(thread_inStream_V_user_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_inStream_V_user_V_0_data_out);
    sensitive << ( inStream_V_user_V_0_payload_A );
    sensitive << ( inStream_V_user_V_0_payload_B );
    sensitive << ( inStream_V_user_V_0_sel );

    SC_METHOD(thread_inStream_V_user_V_0_load_A);
    sensitive << ( inStream_V_user_V_0_sel_wr );
    sensitive << ( inStream_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_user_V_0_load_B);
    sensitive << ( inStream_V_user_V_0_sel_wr );
    sensitive << ( inStream_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_user_V_0_sel);
    sensitive << ( inStream_V_user_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_user_V_0_state_cmp_full);
    sensitive << ( inStream_V_user_V_0_state );

    SC_METHOD(thread_inStream_V_user_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_user_V_0_vld_out);
    sensitive << ( inStream_V_user_V_0_state );

    SC_METHOD(thread_j_1_fu_739_p2);
    sensitive << ( j_reg_400 );

    SC_METHOD(thread_j_2_fu_867_p2);
    sensitive << ( j2_reg_434 );

    SC_METHOD(thread_j_3_fu_1180_p2);
    sensitive << ( j9_reg_574 );

    SC_METHOD(thread_j_4_fu_968_p2);
    sensitive << ( j_i_reg_540 );

    SC_METHOD(thread_min_distance_1_fu_1094_p3);
    sensitive << ( distance_2_reg_1500 );
    sensitive << ( min_distance_i_reg_493 );
    sensitive << ( tmp_37_fu_1081_p2 );

    SC_METHOD(thread_min_distance_i_to_in_fu_1021_p1);
    sensitive << ( min_distance_i_reg_493 );

    SC_METHOD(thread_new_centroids_address0);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( new_centroids_addr_reg_1569 );
    sensitive << ( tmp_51_cast_fu_1258_p1 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( new_centroids_addr_1_reg_1615 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( tmp_47_cast_fu_1209_p1 );

    SC_METHOD(thread_new_centroids_ce0);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_new_centroids_d0);
    sensitive << ( reg_678 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_new_centroids_we0);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_next_mul1_fu_1213_p2);
    sensitive << ( phi_mul9_reg_597 );

    SC_METHOD(thread_next_mul2_fu_843_p2);
    sensitive << ( phi_mul1_reg_422 );

    SC_METHOD(thread_next_mul4_fu_940_p2);
    sensitive << ( phi_mul3_reg_516 );

    SC_METHOD(thread_next_mul6_fu_914_p2);
    sensitive << ( phi_mul5_reg_468 );

    SC_METHOD(thread_next_mul8_fu_1124_p2);
    sensitive << ( phi_mul7_reg_562 );

    SC_METHOD(thread_next_mul_fu_690_p2);
    sensitive << ( phi_mul_reg_388 );

    SC_METHOD(thread_notlhs1_fu_1057_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_31_fu_1025_p4 );

    SC_METHOD(thread_notlhs_fu_1039_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_29_fu_1007_p4 );

    SC_METHOD(thread_notrhs1_fu_1063_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_38_fu_1035_p1 );

    SC_METHOD(thread_notrhs_fu_1045_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_32_fu_1017_p1 );

    SC_METHOD(thread_np_cluster_address0);
    sensitive << ( np_cluster_addr_reg_1520 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( np_cluster_addr_1_reg_1587 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( exitcond10_fu_1236_p2 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( tmp_12_fu_1112_p1 );

    SC_METHOD(thread_np_cluster_ce0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( exitcond10_fu_1236_p2 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_np_cluster_d0);
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( exitcond10_fu_1236_p2 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( tmp_13_fu_1117_p2 );

    SC_METHOD(thread_np_cluster_we0);
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( exitcond10_fu_1236_p2 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_outStream_TDATA);
    sensitive << ( outStream_V_data_V_1_data_out );

    SC_METHOD(thread_outStream_TDATA_blk_n);
    sensitive << ( outStream_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );

    SC_METHOD(thread_outStream_TDEST);
    sensitive << ( outStream_V_dest_V_1_data_out );

    SC_METHOD(thread_outStream_TID);
    sensitive << ( outStream_V_id_V_1_data_out );

    SC_METHOD(thread_outStream_TKEEP);
    sensitive << ( outStream_V_keep_V_1_data_out );

    SC_METHOD(thread_outStream_TLAST);
    sensitive << ( outStream_V_last_V_1_data_out );

    SC_METHOD(thread_outStream_TSTRB);
    sensitive << ( outStream_V_strb_V_1_data_out );

    SC_METHOD(thread_outStream_TUSER);
    sensitive << ( outStream_V_user_V_1_data_out );

    SC_METHOD(thread_outStream_TVALID);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_in);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_data_V_1_data_out);
    sensitive << ( outStream_V_data_V_1_payload_A );
    sensitive << ( outStream_V_data_V_1_payload_B );
    sensitive << ( outStream_V_data_V_1_sel );

    SC_METHOD(thread_outStream_V_data_V_1_load_A);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_load_B);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_sel);
    sensitive << ( outStream_V_data_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_data_V_1_state_cmp_full);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_outStream_V_data_V_1_vld_out);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_in);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_dest_V_1_data_out);
    sensitive << ( outStream_V_dest_V_1_payload_A );
    sensitive << ( outStream_V_dest_V_1_payload_B );
    sensitive << ( outStream_V_dest_V_1_sel );

    SC_METHOD(thread_outStream_V_dest_V_1_load_A);
    sensitive << ( outStream_V_dest_V_1_sel_wr );
    sensitive << ( outStream_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_dest_V_1_load_B);
    sensitive << ( outStream_V_dest_V_1_sel_wr );
    sensitive << ( outStream_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_dest_V_1_sel);
    sensitive << ( outStream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_dest_V_1_state_cmp_full);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_out);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_in);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_id_V_1_data_out);
    sensitive << ( outStream_V_id_V_1_payload_A );
    sensitive << ( outStream_V_id_V_1_payload_B );
    sensitive << ( outStream_V_id_V_1_sel );

    SC_METHOD(thread_outStream_V_id_V_1_load_A);
    sensitive << ( outStream_V_id_V_1_sel_wr );
    sensitive << ( outStream_V_id_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_id_V_1_load_B);
    sensitive << ( outStream_V_id_V_1_sel_wr );
    sensitive << ( outStream_V_id_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_id_V_1_sel);
    sensitive << ( outStream_V_id_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_id_V_1_state_cmp_full);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_outStream_V_id_V_1_vld_out);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_in);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_keep_V_1_data_out);
    sensitive << ( outStream_V_keep_V_1_payload_A );
    sensitive << ( outStream_V_keep_V_1_payload_B );
    sensitive << ( outStream_V_keep_V_1_sel );

    SC_METHOD(thread_outStream_V_keep_V_1_load_A);
    sensitive << ( outStream_V_keep_V_1_sel_wr );
    sensitive << ( outStream_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_keep_V_1_load_B);
    sensitive << ( outStream_V_keep_V_1_sel_wr );
    sensitive << ( outStream_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_keep_V_1_sel);
    sensitive << ( outStream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_keep_V_1_state_cmp_full);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_out);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_in);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_last_V_1_data_out);
    sensitive << ( outStream_V_last_V_1_payload_A );
    sensitive << ( outStream_V_last_V_1_payload_B );
    sensitive << ( outStream_V_last_V_1_sel );

    SC_METHOD(thread_outStream_V_last_V_1_load_A);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_load_B);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_sel);
    sensitive << ( outStream_V_last_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_last_V_1_state_cmp_full);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_outStream_V_last_V_1_vld_out);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_in);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_strb_V_1_data_out);
    sensitive << ( outStream_V_strb_V_1_payload_A );
    sensitive << ( outStream_V_strb_V_1_payload_B );
    sensitive << ( outStream_V_strb_V_1_sel );

    SC_METHOD(thread_outStream_V_strb_V_1_load_A);
    sensitive << ( outStream_V_strb_V_1_sel_wr );
    sensitive << ( outStream_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_strb_V_1_load_B);
    sensitive << ( outStream_V_strb_V_1_sel_wr );
    sensitive << ( outStream_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_strb_V_1_sel);
    sensitive << ( outStream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_strb_V_1_state_cmp_full);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_out);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_in);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_user_V_1_data_out);
    sensitive << ( outStream_V_user_V_1_payload_A );
    sensitive << ( outStream_V_user_V_1_payload_B );
    sensitive << ( outStream_V_user_V_1_sel );

    SC_METHOD(thread_outStream_V_user_V_1_load_A);
    sensitive << ( outStream_V_user_V_1_sel_wr );
    sensitive << ( outStream_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_user_V_1_load_B);
    sensitive << ( outStream_V_user_V_1_sel_wr );
    sensitive << ( outStream_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_user_V_1_sel);
    sensitive << ( outStream_V_user_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_user_V_1_state_cmp_full);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_outStream_V_user_V_1_vld_out);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_points_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_39_cast_fu_809_p1 );
    sensitive << ( tmp_49_cast_fu_999_p1 );

    SC_METHOD(thread_points_address1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( tmp_49_cast_fu_999_p1 );
    sensitive << ( tmp_45_cast_fu_1204_p1 );

    SC_METHOD(thread_points_ce0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_points_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_points_d0);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_points_we0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_results_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_8_reg_1417 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( results_addr_1_reg_1445 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( results_addr_2_reg_1538 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( tmp_7_fu_909_p1 );
    sensitive << ( tmp_21_fu_1274_p1 );

    SC_METHOD(thread_results_ce0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state78 );

    SC_METHOD(thread_results_d0);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( end_cast_reg_1422 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( cluster_reg_480 );

    SC_METHOD(thread_results_we0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( exitcond7_fu_1130_p2 );
    sensitive << ( tmp_9_fu_1101_p2 );

    SC_METHOD(thread_tmp_10_fu_1147_p2);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( exitcond7_fu_1130_p2 );
    sensitive << ( end_fu_174 );

    SC_METHOD(thread_tmp_11_fu_1142_p1);
    sensitive << ( i8_reg_551 );

    SC_METHOD(thread_tmp_12_fu_1112_p1);
    sensitive << ( cluster_reg_480 );

    SC_METHOD(thread_tmp_13_fu_1117_p2);
    sensitive << ( np_cluster_q0 );

    SC_METHOD(thread_tmp_14_cast_fu_1194_p1);
    sensitive << ( j9_reg_574 );

    SC_METHOD(thread_tmp_14_fu_755_p2);
    sensitive << ( tmp_4_reg_1337 );
    sensitive << ( j_reg_400 );

    SC_METHOD(thread_tmp_15_fu_760_p4);
    sensitive << ( i_reg_376 );

    SC_METHOD(thread_tmp_17_fu_1231_p1);
    sensitive << ( c_reg_586 );

    SC_METHOD(thread_tmp_18_cast_fu_1248_p1);
    sensitive << ( f_reg_609 );

    SC_METHOD(thread_tmp_1_cast_fu_745_p1);
    sensitive << ( j_reg_400 );

    SC_METHOD(thread_tmp_21_fu_1274_p1);
    sensitive << ( idx_reg_620 );

    SC_METHOD(thread_tmp_22_fu_877_p2);
    sensitive << ( phi_mul1_reg_422 );
    sensitive << ( tmp_6_cast_fu_873_p1 );

    SC_METHOD(thread_tmp_24_fu_1158_p4);
    sensitive << ( gain_off1_fu_1153_p2 );

    SC_METHOD(thread_tmp_26_fu_1198_p2);
    sensitive << ( phi_mul7_reg_562 );
    sensitive << ( tmp_14_cast_fu_1194_p1 );

    SC_METHOD(thread_tmp_27_fu_1186_p1);
    sensitive << ( results_q0 );

    SC_METHOD(thread_tmp_29_fu_1007_p4);
    sensitive << ( distance_1_to_int_fu_1004_p1 );

    SC_METHOD(thread_tmp_2_fu_770_p3);
    sensitive << ( tmp_15_fu_760_p4 );
    sensitive << ( tmp_14_fu_755_p2 );

    SC_METHOD(thread_tmp_31_fu_1025_p4);
    sensitive << ( min_distance_i_to_in_fu_1021_p1 );

    SC_METHOD(thread_tmp_32_fu_1017_p1);
    sensitive << ( distance_1_to_int_fu_1004_p1 );

    SC_METHOD(thread_tmp_33_fu_1051_p2);
    sensitive << ( notrhs_fu_1045_p2 );
    sensitive << ( notlhs_fu_1039_p2 );

    SC_METHOD(thread_tmp_34_fu_1069_p2);
    sensitive << ( notrhs1_fu_1063_p2 );
    sensitive << ( notlhs1_fu_1057_p2 );

    SC_METHOD(thread_tmp_35_fu_1075_p2);
    sensitive << ( tmp_33_fu_1051_p2 );
    sensitive << ( tmp_34_fu_1069_p2 );

    SC_METHOD(thread_tmp_37_fu_1081_p2);
    sensitive << ( tmp_35_fu_1075_p2 );
    sensitive << ( tmp_36_fu_652_p2 );

    SC_METHOD(thread_tmp_38_fu_1035_p1);
    sensitive << ( min_distance_i_to_in_fu_1021_p1 );

    SC_METHOD(thread_tmp_39_cast_fu_809_p1);
    sensitive << ( tmp_6_reg_1354 );

    SC_METHOD(thread_tmp_39_fu_982_p2);
    sensitive << ( phi_mul3_reg_516 );
    sensitive << ( tmp_4_i_cast_fu_978_p1 );

    SC_METHOD(thread_tmp_3_fu_778_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_733_p2 );
    sensitive << ( tmp_2_fu_770_p3 );

    SC_METHOD(thread_tmp_40_fu_993_p2);
    sensitive << ( phi_mul5_reg_468 );
    sensitive << ( tmp_4_i_cast1_fu_974_p1 );

    SC_METHOD(thread_tmp_41_cast_fu_888_p1);
    sensitive << ( tmp_22_reg_1384 );

    SC_METHOD(thread_tmp_41_fu_1252_p2);
    sensitive << ( phi_mul9_reg_597 );
    sensitive << ( tmp_18_cast_fu_1248_p1 );

    SC_METHOD(thread_tmp_45_cast_fu_1204_p1);
    sensitive << ( tmp_26_fu_1198_p2 );

    SC_METHOD(thread_tmp_47_cast_fu_1209_p1);
    sensitive << ( grp_fu_1310_p3 );

    SC_METHOD(thread_tmp_48_cast_fu_988_p1);
    sensitive << ( tmp_39_fu_982_p2 );

    SC_METHOD(thread_tmp_49_cast_fu_999_p1);
    sensitive << ( tmp_40_fu_993_p2 );

    SC_METHOD(thread_tmp_4_fu_708_p1);
    sensitive << ( i_reg_376 );

    SC_METHOD(thread_tmp_4_i_cast1_fu_974_p1);
    sensitive << ( j_i_reg_540 );

    SC_METHOD(thread_tmp_4_i_cast_fu_978_p1);
    sensitive << ( j_i_reg_540 );

    SC_METHOD(thread_tmp_51_cast_fu_1258_p1);
    sensitive << ( tmp_41_reg_1600 );

    SC_METHOD(thread_tmp_6_cast_fu_873_p1);
    sensitive << ( j2_reg_434 );

    SC_METHOD(thread_tmp_6_fu_749_p2);
    sensitive << ( phi_mul_reg_388 );
    sensitive << ( tmp_1_cast_fu_745_p1 );

    SC_METHOD(thread_tmp_7_fu_909_p1);
    sensitive << ( i5_reg_445 );

    SC_METHOD(thread_tmp_8_fu_932_p1);
    sensitive << ( i7_reg_457 );

    SC_METHOD(thread_tmp_9_fu_1101_p2);
    sensitive << ( results_q0 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( cluster_reg_480 );

    SC_METHOD(thread_tmp_fu_717_p4);
    sensitive << ( gain_off_fu_712_p2 );

    SC_METHOD(thread_valOut_last_V_fu_1279_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( exitcond_fu_1262_p2 );
    sensitive << ( idx_reg_620 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_696_p2 );
    sensitive << ( icmp_reg_1342 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_733_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond4_fu_861_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond6_fu_920_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond1_i_fu_950_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_i_fu_962_p2 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( exitcond7_fu_1130_p2 );
    sensitive << ( tmp_10_reg_1543 );
    sensitive << ( icmp1_reg_1547 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( exitcond9_fu_1219_p2 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( exitcond10_fu_1236_p2 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( exitcond_fu_1262_p2 );
    sensitive << ( exitcond3_fu_849_p2 );
    sensitive << ( exitcond5_fu_892_p2 );
    sensitive << ( exitcond8_fu_1174_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000000000001";
    inStream_V_data_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_data_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_data_V_0_state = "00";
    inStream_V_keep_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_keep_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_keep_V_0_state = "00";
    inStream_V_strb_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_strb_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_strb_V_0_state = "00";
    inStream_V_user_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_user_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_user_V_0_state = "00";
    inStream_V_id_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_id_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_id_V_0_state = "00";
    inStream_V_dest_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_dest_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_dest_V_0_state = "00";
    outStream_V_data_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_data_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_data_V_1_state = "00";
    outStream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_keep_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_keep_V_1_state = "00";
    outStream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_strb_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_strb_V_1_state = "00";
    outStream_V_user_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_user_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_user_V_1_state = "00";
    outStream_V_last_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_last_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_last_V_1_state = "00";
    outStream_V_id_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_id_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_id_V_1_state = "00";
    outStream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_dest_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_dest_V_1_state = "00";
    valref_keep_V = "0000";
    valref_strb_V = "0000";
    valref_user_V = "00";
    valref_id_V = "00000";
    valref_dest_V = "000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "doKmean_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, inStream_TDATA, "(port)inStream_TDATA");
    sc_trace(mVcdFile, inStream_TVALID, "(port)inStream_TVALID");
    sc_trace(mVcdFile, inStream_TREADY, "(port)inStream_TREADY");
    sc_trace(mVcdFile, inStream_TKEEP, "(port)inStream_TKEEP");
    sc_trace(mVcdFile, inStream_TSTRB, "(port)inStream_TSTRB");
    sc_trace(mVcdFile, inStream_TUSER, "(port)inStream_TUSER");
    sc_trace(mVcdFile, inStream_TLAST, "(port)inStream_TLAST");
    sc_trace(mVcdFile, inStream_TID, "(port)inStream_TID");
    sc_trace(mVcdFile, inStream_TDEST, "(port)inStream_TDEST");
    sc_trace(mVcdFile, outStream_TDATA, "(port)outStream_TDATA");
    sc_trace(mVcdFile, outStream_TVALID, "(port)outStream_TVALID");
    sc_trace(mVcdFile, outStream_TREADY, "(port)outStream_TREADY");
    sc_trace(mVcdFile, outStream_TKEEP, "(port)outStream_TKEEP");
    sc_trace(mVcdFile, outStream_TSTRB, "(port)outStream_TSTRB");
    sc_trace(mVcdFile, outStream_TUSER, "(port)outStream_TUSER");
    sc_trace(mVcdFile, outStream_TLAST, "(port)outStream_TLAST");
    sc_trace(mVcdFile, outStream_TID, "(port)outStream_TID");
    sc_trace(mVcdFile, outStream_TDEST, "(port)outStream_TDEST");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWVALID, "(port)s_axi_CRTL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWREADY, "(port)s_axi_CRTL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWADDR, "(port)s_axi_CRTL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WVALID, "(port)s_axi_CRTL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WREADY, "(port)s_axi_CRTL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WDATA, "(port)s_axi_CRTL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WSTRB, "(port)s_axi_CRTL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARVALID, "(port)s_axi_CRTL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARREADY, "(port)s_axi_CRTL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARADDR, "(port)s_axi_CRTL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RVALID, "(port)s_axi_CRTL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RREADY, "(port)s_axi_CRTL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RDATA, "(port)s_axi_CRTL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RRESP, "(port)s_axi_CRTL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BVALID, "(port)s_axi_CRTL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BREADY, "(port)s_axi_CRTL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BRESP, "(port)s_axi_CRTL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inStream_V_data_V_0_data_out, "inStream_V_data_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_in, "inStream_V_data_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_out, "inStream_V_data_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_in, "inStream_V_data_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_out, "inStream_V_data_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_A, "inStream_V_data_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_B, "inStream_V_data_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_rd, "inStream_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_wr, "inStream_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel, "inStream_V_data_V_0_sel");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_A, "inStream_V_data_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_B, "inStream_V_data_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_state, "inStream_V_data_V_0_state");
    sc_trace(mVcdFile, inStream_V_data_V_0_state_cmp_full, "inStream_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_keep_V_0_data_out, "inStream_V_keep_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_keep_V_0_vld_in, "inStream_V_keep_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_keep_V_0_vld_out, "inStream_V_keep_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_keep_V_0_ack_in, "inStream_V_keep_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_keep_V_0_ack_out, "inStream_V_keep_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_keep_V_0_payload_A, "inStream_V_keep_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_keep_V_0_payload_B, "inStream_V_keep_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_keep_V_0_sel_rd, "inStream_V_keep_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_keep_V_0_sel_wr, "inStream_V_keep_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_keep_V_0_sel, "inStream_V_keep_V_0_sel");
    sc_trace(mVcdFile, inStream_V_keep_V_0_load_A, "inStream_V_keep_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_keep_V_0_load_B, "inStream_V_keep_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_keep_V_0_state, "inStream_V_keep_V_0_state");
    sc_trace(mVcdFile, inStream_V_keep_V_0_state_cmp_full, "inStream_V_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_strb_V_0_data_out, "inStream_V_strb_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_strb_V_0_vld_in, "inStream_V_strb_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_strb_V_0_vld_out, "inStream_V_strb_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_strb_V_0_ack_in, "inStream_V_strb_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_strb_V_0_ack_out, "inStream_V_strb_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_strb_V_0_payload_A, "inStream_V_strb_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_strb_V_0_payload_B, "inStream_V_strb_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_strb_V_0_sel_rd, "inStream_V_strb_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_strb_V_0_sel_wr, "inStream_V_strb_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_strb_V_0_sel, "inStream_V_strb_V_0_sel");
    sc_trace(mVcdFile, inStream_V_strb_V_0_load_A, "inStream_V_strb_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_strb_V_0_load_B, "inStream_V_strb_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_strb_V_0_state, "inStream_V_strb_V_0_state");
    sc_trace(mVcdFile, inStream_V_strb_V_0_state_cmp_full, "inStream_V_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_user_V_0_data_out, "inStream_V_user_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_user_V_0_vld_in, "inStream_V_user_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_user_V_0_vld_out, "inStream_V_user_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_user_V_0_ack_in, "inStream_V_user_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_user_V_0_ack_out, "inStream_V_user_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_user_V_0_payload_A, "inStream_V_user_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_user_V_0_payload_B, "inStream_V_user_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_user_V_0_sel_rd, "inStream_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_user_V_0_sel_wr, "inStream_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_user_V_0_sel, "inStream_V_user_V_0_sel");
    sc_trace(mVcdFile, inStream_V_user_V_0_load_A, "inStream_V_user_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_user_V_0_load_B, "inStream_V_user_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_user_V_0_state, "inStream_V_user_V_0_state");
    sc_trace(mVcdFile, inStream_V_user_V_0_state_cmp_full, "inStream_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_id_V_0_data_out, "inStream_V_id_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_id_V_0_vld_in, "inStream_V_id_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_id_V_0_vld_out, "inStream_V_id_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_id_V_0_ack_in, "inStream_V_id_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_id_V_0_ack_out, "inStream_V_id_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_id_V_0_payload_A, "inStream_V_id_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_id_V_0_payload_B, "inStream_V_id_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_id_V_0_sel_rd, "inStream_V_id_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_id_V_0_sel_wr, "inStream_V_id_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_id_V_0_sel, "inStream_V_id_V_0_sel");
    sc_trace(mVcdFile, inStream_V_id_V_0_load_A, "inStream_V_id_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_id_V_0_load_B, "inStream_V_id_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_id_V_0_state, "inStream_V_id_V_0_state");
    sc_trace(mVcdFile, inStream_V_id_V_0_state_cmp_full, "inStream_V_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_dest_V_0_data_out, "inStream_V_dest_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_dest_V_0_vld_in, "inStream_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_dest_V_0_vld_out, "inStream_V_dest_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_dest_V_0_ack_in, "inStream_V_dest_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_dest_V_0_ack_out, "inStream_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_dest_V_0_payload_A, "inStream_V_dest_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_dest_V_0_payload_B, "inStream_V_dest_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_dest_V_0_sel_rd, "inStream_V_dest_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_dest_V_0_sel_wr, "inStream_V_dest_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_dest_V_0_sel, "inStream_V_dest_V_0_sel");
    sc_trace(mVcdFile, inStream_V_dest_V_0_load_A, "inStream_V_dest_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_dest_V_0_load_B, "inStream_V_dest_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_dest_V_0_state, "inStream_V_dest_V_0_state");
    sc_trace(mVcdFile, inStream_V_dest_V_0_state_cmp_full, "inStream_V_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_data_V_1_data_out, "outStream_V_data_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_in, "outStream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_out, "outStream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_in, "outStream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_out, "outStream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_A, "outStream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_B, "outStream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_rd, "outStream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_wr, "outStream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel, "outStream_V_data_V_1_sel");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_A, "outStream_V_data_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_B, "outStream_V_data_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_state, "outStream_V_data_V_1_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_state_cmp_full, "outStream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_keep_V_1_data_out, "outStream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_in, "outStream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_out, "outStream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_in, "outStream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_out, "outStream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_payload_A, "outStream_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_keep_V_1_payload_B, "outStream_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel_rd, "outStream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel_wr, "outStream_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel, "outStream_V_keep_V_1_sel");
    sc_trace(mVcdFile, outStream_V_keep_V_1_load_A, "outStream_V_keep_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_keep_V_1_load_B, "outStream_V_keep_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_keep_V_1_state, "outStream_V_keep_V_1_state");
    sc_trace(mVcdFile, outStream_V_keep_V_1_state_cmp_full, "outStream_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_strb_V_1_data_out, "outStream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_in, "outStream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_out, "outStream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_in, "outStream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_out, "outStream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_payload_A, "outStream_V_strb_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_strb_V_1_payload_B, "outStream_V_strb_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel_rd, "outStream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel_wr, "outStream_V_strb_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel, "outStream_V_strb_V_1_sel");
    sc_trace(mVcdFile, outStream_V_strb_V_1_load_A, "outStream_V_strb_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_strb_V_1_load_B, "outStream_V_strb_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_strb_V_1_state, "outStream_V_strb_V_1_state");
    sc_trace(mVcdFile, outStream_V_strb_V_1_state_cmp_full, "outStream_V_strb_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_user_V_1_data_out, "outStream_V_user_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_in, "outStream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_out, "outStream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_in, "outStream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_out, "outStream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_payload_A, "outStream_V_user_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_user_V_1_payload_B, "outStream_V_user_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel_rd, "outStream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel_wr, "outStream_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel, "outStream_V_user_V_1_sel");
    sc_trace(mVcdFile, outStream_V_user_V_1_load_A, "outStream_V_user_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_user_V_1_load_B, "outStream_V_user_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_user_V_1_state, "outStream_V_user_V_1_state");
    sc_trace(mVcdFile, outStream_V_user_V_1_state_cmp_full, "outStream_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_last_V_1_data_out, "outStream_V_last_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_in, "outStream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_out, "outStream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_in, "outStream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_out, "outStream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_A, "outStream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_B, "outStream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_rd, "outStream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_wr, "outStream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel, "outStream_V_last_V_1_sel");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_A, "outStream_V_last_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_B, "outStream_V_last_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_state, "outStream_V_last_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_state_cmp_full, "outStream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_id_V_1_data_out, "outStream_V_id_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_in, "outStream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_out, "outStream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_in, "outStream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_out, "outStream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_payload_A, "outStream_V_id_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_id_V_1_payload_B, "outStream_V_id_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel_rd, "outStream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel_wr, "outStream_V_id_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel, "outStream_V_id_V_1_sel");
    sc_trace(mVcdFile, outStream_V_id_V_1_load_A, "outStream_V_id_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_id_V_1_load_B, "outStream_V_id_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_id_V_1_state, "outStream_V_id_V_1_state");
    sc_trace(mVcdFile, outStream_V_id_V_1_state_cmp_full, "outStream_V_id_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_dest_V_1_data_out, "outStream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_in, "outStream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_out, "outStream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_in, "outStream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_out, "outStream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_payload_A, "outStream_V_dest_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_dest_V_1_payload_B, "outStream_V_dest_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel_rd, "outStream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel_wr, "outStream_V_dest_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel, "outStream_V_dest_V_1_sel");
    sc_trace(mVcdFile, outStream_V_dest_V_1_load_A, "outStream_V_dest_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_dest_V_1_load_B, "outStream_V_dest_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_dest_V_1_state, "outStream_V_dest_V_1_state");
    sc_trace(mVcdFile, outStream_V_dest_V_1_state_cmp_full, "outStream_V_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, gain, "gain");
    sc_trace(mVcdFile, points_address0, "points_address0");
    sc_trace(mVcdFile, points_ce0, "points_ce0");
    sc_trace(mVcdFile, points_we0, "points_we0");
    sc_trace(mVcdFile, points_d0, "points_d0");
    sc_trace(mVcdFile, points_q0, "points_q0");
    sc_trace(mVcdFile, points_address1, "points_address1");
    sc_trace(mVcdFile, points_ce1, "points_ce1");
    sc_trace(mVcdFile, points_q1, "points_q1");
    sc_trace(mVcdFile, valref_keep_V, "valref_keep_V");
    sc_trace(mVcdFile, valref_strb_V, "valref_strb_V");
    sc_trace(mVcdFile, valref_user_V, "valref_user_V");
    sc_trace(mVcdFile, valref_id_V, "valref_id_V");
    sc_trace(mVcdFile, valref_dest_V, "valref_dest_V");
    sc_trace(mVcdFile, centroids_address0, "centroids_address0");
    sc_trace(mVcdFile, centroids_ce0, "centroids_ce0");
    sc_trace(mVcdFile, centroids_we0, "centroids_we0");
    sc_trace(mVcdFile, centroids_d0, "centroids_d0");
    sc_trace(mVcdFile, centroids_q0, "centroids_q0");
    sc_trace(mVcdFile, centroids_address1, "centroids_address1");
    sc_trace(mVcdFile, centroids_ce1, "centroids_ce1");
    sc_trace(mVcdFile, centroids_we1, "centroids_we1");
    sc_trace(mVcdFile, centroids_q1, "centroids_q1");
    sc_trace(mVcdFile, results_address0, "results_address0");
    sc_trace(mVcdFile, results_ce0, "results_ce0");
    sc_trace(mVcdFile, results_we0, "results_we0");
    sc_trace(mVcdFile, results_d0, "results_d0");
    sc_trace(mVcdFile, results_q0, "results_q0");
    sc_trace(mVcdFile, np_cluster_address0, "np_cluster_address0");
    sc_trace(mVcdFile, np_cluster_ce0, "np_cluster_ce0");
    sc_trace(mVcdFile, np_cluster_we0, "np_cluster_we0");
    sc_trace(mVcdFile, np_cluster_d0, "np_cluster_d0");
    sc_trace(mVcdFile, np_cluster_q0, "np_cluster_q0");
    sc_trace(mVcdFile, new_centroids_address0, "new_centroids_address0");
    sc_trace(mVcdFile, new_centroids_ce0, "new_centroids_ce0");
    sc_trace(mVcdFile, new_centroids_we0, "new_centroids_we0");
    sc_trace(mVcdFile, new_centroids_d0, "new_centroids_d0");
    sc_trace(mVcdFile, new_centroids_q0, "new_centroids_q0");
    sc_trace(mVcdFile, inStream_TDATA_blk_n, "inStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, outStream_TDATA_blk_n, "outStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, reg_671, "reg_671");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, grp_fu_631_p2, "grp_fu_631_p2");
    sc_trace(mVcdFile, reg_678, "reg_678");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, reg_684, "reg_684");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, gain_read_reg_1318, "gain_read_reg_1318");
    sc_trace(mVcdFile, next_mul_fu_690_p2, "next_mul_fu_690_p2");
    sc_trace(mVcdFile, next_mul_reg_1324, "next_mul_reg_1324");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_702_p2, "i_1_fu_702_p2");
    sc_trace(mVcdFile, i_1_reg_1332, "i_1_reg_1332");
    sc_trace(mVcdFile, tmp_4_fu_708_p1, "tmp_4_fu_708_p1");
    sc_trace(mVcdFile, tmp_4_reg_1337, "tmp_4_reg_1337");
    sc_trace(mVcdFile, exitcond1_fu_696_p2, "exitcond1_fu_696_p2");
    sc_trace(mVcdFile, icmp_fu_727_p2, "icmp_fu_727_p2");
    sc_trace(mVcdFile, icmp_reg_1342, "icmp_reg_1342");
    sc_trace(mVcdFile, j_1_fu_739_p2, "j_1_fu_739_p2");
    sc_trace(mVcdFile, j_1_reg_1349, "j_1_reg_1349");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_6_fu_749_p2, "tmp_6_fu_749_p2");
    sc_trace(mVcdFile, tmp_6_reg_1354, "tmp_6_reg_1354");
    sc_trace(mVcdFile, exitcond2_fu_733_p2, "exitcond2_fu_733_p2");
    sc_trace(mVcdFile, tmp_3_fu_778_p2, "tmp_3_fu_778_p2");
    sc_trace(mVcdFile, tmp_3_reg_1359, "tmp_3_reg_1359");
    sc_trace(mVcdFile, next_mul2_fu_843_p2, "next_mul2_fu_843_p2");
    sc_trace(mVcdFile, next_mul2_reg_1363, "next_mul2_reg_1363");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_2_fu_855_p2, "i_2_fu_855_p2");
    sc_trace(mVcdFile, i_2_reg_1371, "i_2_reg_1371");
    sc_trace(mVcdFile, j_2_fu_867_p2, "j_2_fu_867_p2");
    sc_trace(mVcdFile, j_2_reg_1379, "j_2_reg_1379");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_22_fu_877_p2, "tmp_22_fu_877_p2");
    sc_trace(mVcdFile, tmp_22_reg_1384, "tmp_22_reg_1384");
    sc_trace(mVcdFile, exitcond4_fu_861_p2, "exitcond4_fu_861_p2");
    sc_trace(mVcdFile, i_3_fu_898_p2, "i_3_fu_898_p2");
    sc_trace(mVcdFile, i_3_reg_1392, "i_3_reg_1392");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, next_mul6_fu_914_p2, "next_mul6_fu_914_p2");
    sc_trace(mVcdFile, next_mul6_reg_1404, "next_mul6_reg_1404");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_4_fu_926_p2, "i_4_fu_926_p2");
    sc_trace(mVcdFile, i_4_reg_1412, "i_4_reg_1412");
    sc_trace(mVcdFile, tmp_8_fu_932_p1, "tmp_8_fu_932_p1");
    sc_trace(mVcdFile, tmp_8_reg_1417, "tmp_8_reg_1417");
    sc_trace(mVcdFile, exitcond6_fu_920_p2, "exitcond6_fu_920_p2");
    sc_trace(mVcdFile, end_cast_fu_936_p1, "end_cast_fu_936_p1");
    sc_trace(mVcdFile, end_cast_reg_1422, "end_cast_reg_1422");
    sc_trace(mVcdFile, next_mul4_fu_940_p2, "next_mul4_fu_940_p2");
    sc_trace(mVcdFile, next_mul4_reg_1427, "next_mul4_reg_1427");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, cluster_1_cast7_fu_946_p1, "cluster_1_cast7_fu_946_p1");
    sc_trace(mVcdFile, cluster_1_cast7_reg_1432, "cluster_1_cast7_reg_1432");
    sc_trace(mVcdFile, c_2_fu_956_p2, "c_2_fu_956_p2");
    sc_trace(mVcdFile, c_2_reg_1440, "c_2_reg_1440");
    sc_trace(mVcdFile, results_addr_1_reg_1445, "results_addr_1_reg_1445");
    sc_trace(mVcdFile, exitcond1_i_fu_950_p2, "exitcond1_i_fu_950_p2");
    sc_trace(mVcdFile, j_4_fu_968_p2, "j_4_fu_968_p2");
    sc_trace(mVcdFile, j_4_reg_1453, "j_4_reg_1453");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, exitcond_i_fu_962_p2, "exitcond_i_fu_962_p2");
    sc_trace(mVcdFile, centroids_load_reg_1470, "centroids_load_reg_1470");
    sc_trace(mVcdFile, points_load_2_reg_1475, "points_load_2_reg_1475");
    sc_trace(mVcdFile, centroids_load_1_reg_1480, "centroids_load_1_reg_1480");
    sc_trace(mVcdFile, grp_fu_635_p2, "grp_fu_635_p2");
    sc_trace(mVcdFile, tmp_6_i_reg_1485, "tmp_6_i_reg_1485");
    sc_trace(mVcdFile, grp_fu_640_p2, "grp_fu_640_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_1490, "tmp_7_i_reg_1490");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, grp_fu_657_p2, "grp_fu_657_p2");
    sc_trace(mVcdFile, distance_2_reg_1500, "distance_2_reg_1500");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, cluster_2_fu_1087_p3, "cluster_2_fu_1087_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, min_distance_1_fu_1094_p3, "min_distance_1_fu_1094_p3");
    sc_trace(mVcdFile, np_cluster_addr_reg_1520, "np_cluster_addr_reg_1520");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, next_mul8_fu_1124_p2, "next_mul8_fu_1124_p2");
    sc_trace(mVcdFile, next_mul8_reg_1525, "next_mul8_reg_1525");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, i_5_fu_1136_p2, "i_5_fu_1136_p2");
    sc_trace(mVcdFile, i_5_reg_1533, "i_5_reg_1533");
    sc_trace(mVcdFile, results_addr_2_reg_1538, "results_addr_2_reg_1538");
    sc_trace(mVcdFile, exitcond7_fu_1130_p2, "exitcond7_fu_1130_p2");
    sc_trace(mVcdFile, tmp_10_fu_1147_p2, "tmp_10_fu_1147_p2");
    sc_trace(mVcdFile, tmp_10_reg_1543, "tmp_10_reg_1543");
    sc_trace(mVcdFile, icmp1_fu_1168_p2, "icmp1_fu_1168_p2");
    sc_trace(mVcdFile, icmp1_reg_1547, "icmp1_reg_1547");
    sc_trace(mVcdFile, j_3_fu_1180_p2, "j_3_fu_1180_p2");
    sc_trace(mVcdFile, j_3_reg_1554, "j_3_reg_1554");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, tmp_27_fu_1186_p1, "tmp_27_fu_1186_p1");
    sc_trace(mVcdFile, tmp_27_reg_1559, "tmp_27_reg_1559");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, new_centroids_addr_reg_1569, "new_centroids_addr_reg_1569");
    sc_trace(mVcdFile, next_mul1_fu_1213_p2, "next_mul1_fu_1213_p2");
    sc_trace(mVcdFile, next_mul1_reg_1574, "next_mul1_reg_1574");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, c_1_fu_1225_p2, "c_1_fu_1225_p2");
    sc_trace(mVcdFile, c_1_reg_1582, "c_1_reg_1582");
    sc_trace(mVcdFile, np_cluster_addr_1_reg_1587, "np_cluster_addr_1_reg_1587");
    sc_trace(mVcdFile, exitcond9_fu_1219_p2, "exitcond9_fu_1219_p2");
    sc_trace(mVcdFile, f_1_fu_1242_p2, "f_1_fu_1242_p2");
    sc_trace(mVcdFile, f_1_reg_1595, "f_1_reg_1595");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, tmp_41_fu_1252_p2, "tmp_41_fu_1252_p2");
    sc_trace(mVcdFile, tmp_41_reg_1600, "tmp_41_reg_1600");
    sc_trace(mVcdFile, exitcond10_fu_1236_p2, "exitcond10_fu_1236_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, tmp_51_cast_fu_1258_p1, "tmp_51_cast_fu_1258_p1");
    sc_trace(mVcdFile, tmp_51_cast_reg_1610, "tmp_51_cast_reg_1610");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, new_centroids_addr_1_reg_1615, "new_centroids_addr_1_reg_1615");
    sc_trace(mVcdFile, grp_fu_648_p1, "grp_fu_648_p1");
    sc_trace(mVcdFile, tmp_19_reg_1620, "tmp_19_reg_1620");
    sc_trace(mVcdFile, grp_fu_644_p2, "grp_fu_644_p2");
    sc_trace(mVcdFile, tmp_20_reg_1625, "tmp_20_reg_1625");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, idx_1_fu_1268_p2, "idx_1_fu_1268_p2");
    sc_trace(mVcdFile, idx_1_reg_1633, "idx_1_reg_1633");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, ap_block_state78, "ap_block_state78");
    sc_trace(mVcdFile, exitcond_fu_1262_p2, "exitcond_fu_1262_p2");
    sc_trace(mVcdFile, valOut_last_V_fu_1279_p2, "valOut_last_V_fu_1279_p2");
    sc_trace(mVcdFile, valOut_last_V_reg_1643, "valOut_last_V_reg_1643");
    sc_trace(mVcdFile, i_reg_376, "i_reg_376");
    sc_trace(mVcdFile, phi_mul_reg_388, "phi_mul_reg_388");
    sc_trace(mVcdFile, j_reg_400, "j_reg_400");
    sc_trace(mVcdFile, i1_reg_411, "i1_reg_411");
    sc_trace(mVcdFile, phi_mul1_reg_422, "phi_mul1_reg_422");
    sc_trace(mVcdFile, j2_reg_434, "j2_reg_434");
    sc_trace(mVcdFile, exitcond3_fu_849_p2, "exitcond3_fu_849_p2");
    sc_trace(mVcdFile, i5_reg_445, "i5_reg_445");
    sc_trace(mVcdFile, i7_reg_457, "i7_reg_457");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, exitcond5_fu_892_p2, "exitcond5_fu_892_p2");
    sc_trace(mVcdFile, phi_mul5_reg_468, "phi_mul5_reg_468");
    sc_trace(mVcdFile, cluster_reg_480, "cluster_reg_480");
    sc_trace(mVcdFile, min_distance_i_reg_493, "min_distance_i_reg_493");
    sc_trace(mVcdFile, cluster_1_reg_505, "cluster_1_reg_505");
    sc_trace(mVcdFile, phi_mul3_reg_516, "phi_mul3_reg_516");
    sc_trace(mVcdFile, distance_i_reg_528, "distance_i_reg_528");
    sc_trace(mVcdFile, j_i_reg_540, "j_i_reg_540");
    sc_trace(mVcdFile, i8_reg_551, "i8_reg_551");
    sc_trace(mVcdFile, exitcond8_fu_1174_p2, "exitcond8_fu_1174_p2");
    sc_trace(mVcdFile, phi_mul7_reg_562, "phi_mul7_reg_562");
    sc_trace(mVcdFile, j9_reg_574, "j9_reg_574");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, c_reg_586, "c_reg_586");
    sc_trace(mVcdFile, phi_mul9_reg_597, "phi_mul9_reg_597");
    sc_trace(mVcdFile, f_reg_609, "f_reg_609");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, idx_reg_620, "idx_reg_620");
    sc_trace(mVcdFile, tmp_39_cast_fu_809_p1, "tmp_39_cast_fu_809_p1");
    sc_trace(mVcdFile, tmp_41_cast_fu_888_p1, "tmp_41_cast_fu_888_p1");
    sc_trace(mVcdFile, tmp_7_fu_909_p1, "tmp_7_fu_909_p1");
    sc_trace(mVcdFile, tmp_48_cast_fu_988_p1, "tmp_48_cast_fu_988_p1");
    sc_trace(mVcdFile, tmp_49_cast_fu_999_p1, "tmp_49_cast_fu_999_p1");
    sc_trace(mVcdFile, tmp_12_fu_1112_p1, "tmp_12_fu_1112_p1");
    sc_trace(mVcdFile, tmp_11_fu_1142_p1, "tmp_11_fu_1142_p1");
    sc_trace(mVcdFile, tmp_45_cast_fu_1204_p1, "tmp_45_cast_fu_1204_p1");
    sc_trace(mVcdFile, tmp_47_cast_fu_1209_p1, "tmp_47_cast_fu_1209_p1");
    sc_trace(mVcdFile, tmp_17_fu_1231_p1, "tmp_17_fu_1231_p1");
    sc_trace(mVcdFile, tmp_21_fu_1274_p1, "tmp_21_fu_1274_p1");
    sc_trace(mVcdFile, end_fu_174, "end_fu_174");
    sc_trace(mVcdFile, tmp_9_fu_1101_p2, "tmp_9_fu_1101_p2");
    sc_trace(mVcdFile, tmp_13_fu_1117_p2, "tmp_13_fu_1117_p2");
    sc_trace(mVcdFile, grp_fu_631_p0, "grp_fu_631_p0");
    sc_trace(mVcdFile, grp_fu_631_p1, "grp_fu_631_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, gain_off_fu_712_p2, "gain_off_fu_712_p2");
    sc_trace(mVcdFile, tmp_fu_717_p4, "tmp_fu_717_p4");
    sc_trace(mVcdFile, tmp_1_cast_fu_745_p1, "tmp_1_cast_fu_745_p1");
    sc_trace(mVcdFile, tmp_15_fu_760_p4, "tmp_15_fu_760_p4");
    sc_trace(mVcdFile, tmp_14_fu_755_p2, "tmp_14_fu_755_p2");
    sc_trace(mVcdFile, tmp_2_fu_770_p3, "tmp_2_fu_770_p3");
    sc_trace(mVcdFile, tmp_6_cast_fu_873_p1, "tmp_6_cast_fu_873_p1");
    sc_trace(mVcdFile, tmp_4_i_cast_fu_978_p1, "tmp_4_i_cast_fu_978_p1");
    sc_trace(mVcdFile, tmp_39_fu_982_p2, "tmp_39_fu_982_p2");
    sc_trace(mVcdFile, tmp_4_i_cast1_fu_974_p1, "tmp_4_i_cast1_fu_974_p1");
    sc_trace(mVcdFile, tmp_40_fu_993_p2, "tmp_40_fu_993_p2");
    sc_trace(mVcdFile, distance_1_to_int_fu_1004_p1, "distance_1_to_int_fu_1004_p1");
    sc_trace(mVcdFile, min_distance_i_to_in_fu_1021_p1, "min_distance_i_to_in_fu_1021_p1");
    sc_trace(mVcdFile, tmp_29_fu_1007_p4, "tmp_29_fu_1007_p4");
    sc_trace(mVcdFile, tmp_32_fu_1017_p1, "tmp_32_fu_1017_p1");
    sc_trace(mVcdFile, notrhs_fu_1045_p2, "notrhs_fu_1045_p2");
    sc_trace(mVcdFile, notlhs_fu_1039_p2, "notlhs_fu_1039_p2");
    sc_trace(mVcdFile, tmp_31_fu_1025_p4, "tmp_31_fu_1025_p4");
    sc_trace(mVcdFile, tmp_38_fu_1035_p1, "tmp_38_fu_1035_p1");
    sc_trace(mVcdFile, notrhs1_fu_1063_p2, "notrhs1_fu_1063_p2");
    sc_trace(mVcdFile, notlhs1_fu_1057_p2, "notlhs1_fu_1057_p2");
    sc_trace(mVcdFile, tmp_33_fu_1051_p2, "tmp_33_fu_1051_p2");
    sc_trace(mVcdFile, tmp_34_fu_1069_p2, "tmp_34_fu_1069_p2");
    sc_trace(mVcdFile, tmp_35_fu_1075_p2, "tmp_35_fu_1075_p2");
    sc_trace(mVcdFile, tmp_36_fu_652_p2, "tmp_36_fu_652_p2");
    sc_trace(mVcdFile, tmp_37_fu_1081_p2, "tmp_37_fu_1081_p2");
    sc_trace(mVcdFile, gain_off1_fu_1153_p2, "gain_off1_fu_1153_p2");
    sc_trace(mVcdFile, tmp_24_fu_1158_p4, "tmp_24_fu_1158_p4");
    sc_trace(mVcdFile, tmp_14_cast_fu_1194_p1, "tmp_14_cast_fu_1194_p1");
    sc_trace(mVcdFile, tmp_26_fu_1198_p2, "tmp_26_fu_1198_p2");
    sc_trace(mVcdFile, grp_fu_1310_p3, "grp_fu_1310_p3");
    sc_trace(mVcdFile, tmp_18_cast_fu_1248_p1, "tmp_18_cast_fu_1248_p1");
    sc_trace(mVcdFile, grp_fu_1310_p0, "grp_fu_1310_p0");
    sc_trace(mVcdFile, grp_fu_1310_p2, "grp_fu_1310_p2");
    sc_trace(mVcdFile, grp_fu_631_opcode, "grp_fu_631_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_1310_p20, "grp_fu_1310_p20");
#endif

    }
    mHdltvinHandle.open("doKmean.hdltvin.dat");
    mHdltvoutHandle.open("doKmean.hdltvout.dat");
}

doKmean::~doKmean() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete points_U;
    delete centroids_U;
    delete results_U;
    delete np_cluster_U;
    delete new_centroids_U;
    delete doKmean_CRTL_BUS_s_axi_U;
    delete doKmean_faddfsub_cud_U1;
    delete doKmean_fsub_32nsdEe_U2;
    delete doKmean_fmul_32nseOg_U3;
    delete doKmean_fdiv_32nsfYi_U4;
    delete doKmean_sitofp_32g8j_U5;
    delete doKmean_fcmp_32nshbi_U6;
    delete doKmean_fsqrt_32nibs_U7;
    delete doKmean_mac_muladjbC_U8;
}

void doKmean::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void doKmean::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void doKmean::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_4;
}

void doKmean::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_1130_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_1147_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp1_fu_1168_p2.read()))) {
        c_reg_586 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
                esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_1))) {
        c_reg_586 = c_1_reg_1582.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        cluster_1_reg_505 = c_2_reg_1440.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_0))) {
        cluster_1_reg_505 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        cluster_reg_480 = cluster_2_fu_1087_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_0))) {
        cluster_reg_480 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_950_p2.read(), ap_const_lv1_0))) {
        distance_i_reg_528 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        distance_i_reg_528 = grp_fu_631_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_1101_p2.read()))) {
        end_fu_174 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(exitcond5_fu_892_p2.read(), ap_const_lv1_1))) {
        end_fu_174 = ap_const_lv2_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        f_reg_609 = f_1_reg_1595.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
                esl_seteq<1,1,1>(icmp1_reg_1547.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(tmp_10_reg_1543.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(exitcond9_fu_1219_p2.read(), ap_const_lv1_0))) {
        f_reg_609 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_696_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_727_p2.read()))) {
        i1_reg_411 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_861_p2.read(), ap_const_lv1_1))) {
        i1_reg_411 = i_2_reg_1371.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
        i5_reg_445 = i_3_reg_1392.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                (esl_seteq<1,1,1>(exitcond3_fu_849_p2.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(icmp_reg_1342.read(), ap_const_lv1_0)))) {
        i5_reg_445 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_892_p2.read(), ap_const_lv1_1))) {
        i7_reg_457 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        i7_reg_457 = i_4_reg_1412.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_1))) {
        i8_reg_551 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
                esl_seteq<1,1,1>(exitcond8_fu_1174_p2.read(), ap_const_lv1_1))) {
        i8_reg_551 = i_5_reg_1533.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_733_p2.read(), ap_const_lv1_1))) {
        i_reg_376 = i_1_reg_1332.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_376 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()))) {
        idx_reg_620 = idx_1_reg_1633.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
                (esl_seteq<1,1,1>(exitcond9_fu_1219_p2.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(icmp1_reg_1547.read(), ap_const_lv1_0) || 
                 esl_seteq<1,1,1>(tmp_10_reg_1543.read(), ap_const_lv1_0)))) {
        idx_reg_620 = ap_const_lv5_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_out.read()))) {
            inStream_V_data_V_0_sel_rd =  (sc_logic) (~inStream_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_in.read()))) {
            inStream_V_data_V_0_sel_wr =  (sc_logic) (~inStream_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            inStream_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()))))) {
            inStream_V_data_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_out.read()))) {
            inStream_V_dest_V_0_sel_rd =  (sc_logic) (~inStream_V_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_in.read()))) {
            inStream_V_dest_V_0_sel_wr =  (sc_logic) (~inStream_V_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()))))) {
            inStream_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_vld_out.read()))) {
            inStream_V_id_V_0_sel_rd =  (sc_logic) (~inStream_V_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_ack_in.read()))) {
            inStream_V_id_V_0_sel_wr =  (sc_logic) (~inStream_V_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_id_V_0_state.read())))) {
            inStream_V_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_id_V_0_state.read())))) {
            inStream_V_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_ack_out.read()))))) {
            inStream_V_id_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_vld_out.read()))) {
            inStream_V_keep_V_0_sel_rd =  (sc_logic) (~inStream_V_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_ack_in.read()))) {
            inStream_V_keep_V_0_sel_wr =  (sc_logic) (~inStream_V_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_keep_V_0_state.read())))) {
            inStream_V_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_keep_V_0_state.read())))) {
            inStream_V_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_ack_out.read()))))) {
            inStream_V_keep_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_vld_out.read()))) {
            inStream_V_strb_V_0_sel_rd =  (sc_logic) (~inStream_V_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_ack_in.read()))) {
            inStream_V_strb_V_0_sel_wr =  (sc_logic) (~inStream_V_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_strb_V_0_state.read())))) {
            inStream_V_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_strb_V_0_state.read())))) {
            inStream_V_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_ack_out.read()))))) {
            inStream_V_strb_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_vld_out.read()))) {
            inStream_V_user_V_0_sel_rd =  (sc_logic) (~inStream_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_ack_in.read()))) {
            inStream_V_user_V_0_sel_wr =  (sc_logic) (~inStream_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_user_V_0_state.read())))) {
            inStream_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_user_V_0_state.read())))) {
            inStream_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_ack_out.read()))))) {
            inStream_V_user_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
        j2_reg_434 = j_2_reg_1379.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_reg_1342.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(exitcond3_fu_849_p2.read(), ap_const_lv1_0))) {
        j2_reg_434 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        j9_reg_574 = j_3_reg_1554.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
                esl_seteq<1,1,1>(exitcond7_fu_1130_p2.read(), ap_const_lv1_0))) {
        j9_reg_574 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_950_p2.read(), ap_const_lv1_0))) {
        j_i_reg_540 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        j_i_reg_540 = j_4_reg_1453.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
        j_reg_400 = j_1_reg_1349.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_696_p2.read(), ap_const_lv1_0))) {
        j_reg_400 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        min_distance_i_reg_493 = min_distance_1_fu_1094_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_0))) {
        min_distance_i_reg_493 = ap_const_lv32_51BA43B7;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_out.read()))) {
            outStream_V_data_V_1_sel_rd =  (sc_logic) (~outStream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_in.read()))) {
            outStream_V_data_V_1_sel_wr =  (sc_logic) (~outStream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()))))) {
            outStream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_out.read()))) {
            outStream_V_dest_V_1_sel_rd =  (sc_logic) (~outStream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_in.read()))) {
            outStream_V_dest_V_1_sel_wr =  (sc_logic) (~outStream_V_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()))))) {
            outStream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_out.read()))) {
            outStream_V_id_V_1_sel_rd =  (sc_logic) (~outStream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_in.read()))) {
            outStream_V_id_V_1_sel_wr =  (sc_logic) (~outStream_V_id_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()))))) {
            outStream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_out.read()))) {
            outStream_V_keep_V_1_sel_rd =  (sc_logic) (~outStream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_in.read()))) {
            outStream_V_keep_V_1_sel_wr =  (sc_logic) (~outStream_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()))))) {
            outStream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_out.read()))) {
            outStream_V_last_V_1_sel_rd =  (sc_logic) (~outStream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_in.read()))) {
            outStream_V_last_V_1_sel_wr =  (sc_logic) (~outStream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()))))) {
            outStream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_out.read()))) {
            outStream_V_strb_V_1_sel_rd =  (sc_logic) (~outStream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_in.read()))) {
            outStream_V_strb_V_1_sel_wr =  (sc_logic) (~outStream_V_strb_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()))))) {
            outStream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_out.read()))) {
            outStream_V_user_V_1_sel_rd =  (sc_logic) (~outStream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_in.read()))) {
            outStream_V_user_V_1_sel_wr =  (sc_logic) (~outStream_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()))))) {
            outStream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_696_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_727_p2.read()))) {
        phi_mul1_reg_422 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_861_p2.read(), ap_const_lv1_1))) {
        phi_mul1_reg_422 = next_mul2_reg_1363.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        phi_mul3_reg_516 = next_mul4_reg_1427.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_0))) {
        phi_mul3_reg_516 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_892_p2.read(), ap_const_lv1_1))) {
        phi_mul5_reg_468 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        phi_mul5_reg_468 = next_mul6_reg_1404.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_1))) {
        phi_mul7_reg_562 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
                esl_seteq<1,1,1>(exitcond8_fu_1174_p2.read(), ap_const_lv1_1))) {
        phi_mul7_reg_562 = next_mul8_reg_1525.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_1130_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_1147_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp1_fu_1168_p2.read()))) {
        phi_mul9_reg_597 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
                esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_1))) {
        phi_mul9_reg_597 = next_mul1_reg_1574.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_733_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_388 = next_mul_reg_1324.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        phi_mul_reg_388 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        reg_671 = points_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        reg_671 = points_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(tmp_10_reg_1543.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp1_reg_1547.read(), ap_const_lv1_1))) {
        c_1_reg_1582 = c_1_fu_1225_p2.read();
        next_mul1_reg_1574 = next_mul1_fu_1213_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        c_2_reg_1440 = c_2_fu_956_p2.read();
        cluster_1_cast7_reg_1432 = cluster_1_cast7_fu_946_p1.read();
        next_mul4_reg_1427 = next_mul4_fu_940_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        centroids_load_1_reg_1480 = centroids_q1.read();
        centroids_load_reg_1470 = centroids_q0.read();
        points_load_2_reg_1475 = points_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        distance_2_reg_1500 = grp_fu_657_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_1))) {
        end_cast_reg_1422 = end_cast_fu_936_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        f_1_reg_1595 = f_1_fu_1242_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        gain_read_reg_1318 = gain.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_1332 = i_1_fu_702_p2.read();
        next_mul_reg_1324 = next_mul_fu_690_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_reg_1342.read(), ap_const_lv1_1))) {
        i_2_reg_1371 = i_2_fu_855_p2.read();
        next_mul2_reg_1363 = next_mul2_fu_843_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_3_reg_1392 = i_3_fu_898_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_4_reg_1412 = i_4_fu_926_p2.read();
        next_mul6_reg_1404 = next_mul6_fu_914_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        i_5_reg_1533 = i_5_fu_1136_p2.read();
        next_mul8_reg_1525 = next_mul8_fu_1124_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(exitcond7_fu_1130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_1147_p2.read()))) {
        icmp1_reg_1547 = icmp1_fu_1168_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_696_p2.read(), ap_const_lv1_1))) {
        icmp_reg_1342 = icmp_fu_727_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && !(esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0)))) {
        idx_1_reg_1633 = idx_1_fu_1268_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_A.read())) {
        inStream_V_data_V_0_payload_A = inStream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_B.read())) {
        inStream_V_data_V_0_payload_B = inStream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_load_A.read())) {
        inStream_V_dest_V_0_payload_A = inStream_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_load_B.read())) {
        inStream_V_dest_V_0_payload_B = inStream_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_load_A.read())) {
        inStream_V_id_V_0_payload_A = inStream_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_load_B.read())) {
        inStream_V_id_V_0_payload_B = inStream_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_load_A.read())) {
        inStream_V_keep_V_0_payload_A = inStream_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_load_B.read())) {
        inStream_V_keep_V_0_payload_B = inStream_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_load_A.read())) {
        inStream_V_strb_V_0_payload_A = inStream_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_load_B.read())) {
        inStream_V_strb_V_0_payload_B = inStream_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_load_A.read())) {
        inStream_V_user_V_0_payload_A = inStream_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_load_B.read())) {
        inStream_V_user_V_0_payload_B = inStream_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_1349 = j_1_fu_739_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_2_reg_1379 = j_2_fu_867_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        j_3_reg_1554 = j_3_fu_1180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_4_reg_1453 = j_4_fu_968_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        new_centroids_addr_1_reg_1615 =  (sc_lv<10>) (tmp_51_cast_fu_1258_p1.read());
        tmp_51_cast_reg_1610 = tmp_51_cast_fu_1258_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        new_centroids_addr_reg_1569 =  (sc_lv<10>) (tmp_47_cast_fu_1209_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(icmp1_reg_1547.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_10_reg_1543.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(exitcond9_fu_1219_p2.read(), ap_const_lv1_0))) {
        np_cluster_addr_1_reg_1587 =  (sc_lv<5>) (tmp_17_fu_1231_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        np_cluster_addr_reg_1520 =  (sc_lv<5>) (tmp_12_fu_1112_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_A.read())) {
        outStream_V_data_V_1_payload_A = results_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_B.read())) {
        outStream_V_data_V_1_payload_B = results_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_load_A.read())) {
        outStream_V_dest_V_1_payload_A = valref_dest_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_load_B.read())) {
        outStream_V_dest_V_1_payload_B = valref_dest_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_load_A.read())) {
        outStream_V_id_V_1_payload_A = valref_id_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_load_B.read())) {
        outStream_V_id_V_1_payload_B = valref_id_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_load_A.read())) {
        outStream_V_keep_V_1_payload_A = valref_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_load_B.read())) {
        outStream_V_keep_V_1_payload_B = valref_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_A.read())) {
        outStream_V_last_V_1_payload_A = valOut_last_V_reg_1643.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_B.read())) {
        outStream_V_last_V_1_payload_B = valOut_last_V_reg_1643.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_load_A.read())) {
        outStream_V_strb_V_1_payload_A = valref_strb_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_load_B.read())) {
        outStream_V_strb_V_1_payload_B = valref_strb_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_load_A.read())) {
        outStream_V_user_V_1_payload_A = valref_user_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_load_B.read())) {
        outStream_V_user_V_1_payload_B = valref_user_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        reg_678 = grp_fu_631_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()))) {
        reg_684 = new_centroids_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_950_p2.read(), ap_const_lv1_1))) {
        results_addr_1_reg_1445 =  (sc_lv<10>) (tmp_8_reg_1417.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(exitcond7_fu_1130_p2.read(), ap_const_lv1_0))) {
        results_addr_2_reg_1538 =  (sc_lv<10>) (tmp_11_fu_1142_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(exitcond7_fu_1130_p2.read(), ap_const_lv1_1))) {
        tmp_10_reg_1543 = tmp_10_fu_1147_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        tmp_19_reg_1620 = grp_fu_648_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        tmp_20_reg_1625 = grp_fu_644_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond4_fu_861_p2.read(), ap_const_lv1_0))) {
        tmp_22_reg_1384 = tmp_22_fu_877_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        tmp_27_reg_1559 = tmp_27_fu_1186_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_733_p2.read(), ap_const_lv1_0))) {
        tmp_3_reg_1359 = tmp_3_fu_778_p2.read();
        tmp_6_reg_1354 = tmp_6_fu_749_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_0))) {
        tmp_41_reg_1600 = tmp_41_fu_1252_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_696_p2.read(), ap_const_lv1_0))) {
        tmp_4_reg_1337 = tmp_4_fu_708_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_6_i_reg_1485 = grp_fu_635_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_7_i_reg_1490 = grp_fu_640_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_0))) {
        tmp_8_reg_1417 = tmp_8_fu_932_p1.read();
    }
    if ((!(esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && esl_seteq<1,1,1>(exitcond_fu_1262_p2.read(), ap_const_lv1_0))) {
        valOut_last_V_reg_1643 = valOut_last_V_fu_1279_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1359.read()))) {
        valref_dest_V = inStream_V_dest_V_0_data_out.read();
        valref_id_V = inStream_V_id_V_0_data_out.read();
        valref_keep_V = inStream_V_keep_V_0_data_out.read();
        valref_strb_V = inStream_V_strb_V_0_data_out.read();
        valref_user_V = inStream_V_user_V_0_data_out.read();
    }
}

void doKmean::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void doKmean::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void doKmean::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void doKmean::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void doKmean::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void doKmean::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void doKmean::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void doKmean::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void doKmean::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void doKmean::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void doKmean::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void doKmean::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void doKmean::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void doKmean::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void doKmean::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void doKmean::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void doKmean::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void doKmean::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void doKmean::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void doKmean::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void doKmean::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void doKmean::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void doKmean::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void doKmean::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void doKmean::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void doKmean::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void doKmean::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void doKmean::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void doKmean::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void doKmean::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void doKmean::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void doKmean::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void doKmean::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void doKmean::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void doKmean::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void doKmean::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[75];
}

void doKmean::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read()[76];
}

void doKmean::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[77];
}

void doKmean::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[78];
}

void doKmean::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void doKmean::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void doKmean::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void doKmean::thread_ap_block_state78() {
    ap_block_state78 = (esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0));
}

void doKmean::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_1262_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void doKmean::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void doKmean::thread_ap_ready() {
    if ((!(esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_1262_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void doKmean::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void doKmean::thread_c_1_fu_1225_p2() {
    c_1_fu_1225_p2 = (!c_reg_586.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(c_reg_586.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void doKmean::thread_c_2_fu_956_p2() {
    c_2_fu_956_p2 = (!cluster_1_reg_505.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(cluster_1_reg_505.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void doKmean::thread_centroids_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        centroids_address0 =  (sc_lv<10>) (tmp_48_cast_fu_988_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        centroids_address0 =  (sc_lv<10>) (tmp_41_cast_fu_888_p1.read());
    } else {
        centroids_address0 = "XXXXXXXXXX";
    }
}

void doKmean::thread_centroids_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        centroids_address1 =  (sc_lv<10>) (tmp_51_cast_reg_1610.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        centroids_address1 =  (sc_lv<10>) (tmp_48_cast_fu_988_p1.read());
    } else {
        centroids_address1 = "XXXXXXXXXX";
    }
}

void doKmean::thread_centroids_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        centroids_ce0 = ap_const_logic_1;
    } else {
        centroids_ce0 = ap_const_logic_0;
    }
}

void doKmean::thread_centroids_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        centroids_ce1 = ap_const_logic_1;
    } else {
        centroids_ce1 = ap_const_logic_0;
    }
}

void doKmean::thread_centroids_d0() {
    centroids_d0 = inStream_V_data_V_0_data_out.read();
}

void doKmean::thread_centroids_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
        centroids_we0 = ap_const_logic_1;
    } else {
        centroids_we0 = ap_const_logic_0;
    }
}

void doKmean::thread_centroids_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        centroids_we1 = ap_const_logic_1;
    } else {
        centroids_we1 = ap_const_logic_0;
    }
}

void doKmean::thread_cluster_1_cast7_fu_946_p1() {
    cluster_1_cast7_fu_946_p1 = esl_zext<32,5>(cluster_1_reg_505.read());
}

void doKmean::thread_cluster_2_fu_1087_p3() {
    cluster_2_fu_1087_p3 = (!tmp_37_fu_1081_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_37_fu_1081_p2.read()[0].to_bool())? cluster_1_cast7_reg_1432.read(): cluster_reg_480.read());
}

void doKmean::thread_distance_1_to_int_fu_1004_p1() {
    distance_1_to_int_fu_1004_p1 = distance_2_reg_1500.read();
}

void doKmean::thread_end_cast_fu_936_p1() {
    end_cast_fu_936_p1 = esl_zext<32,2>(end_fu_174.read());
}

void doKmean::thread_exitcond10_fu_1236_p2() {
    exitcond10_fu_1236_p2 = (!f_reg_609.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(f_reg_609.read() == ap_const_lv6_32);
}

void doKmean::thread_exitcond1_fu_696_p2() {
    exitcond1_fu_696_p2 = (!i_reg_376.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_376.read() == ap_const_lv10_3E8);
}

void doKmean::thread_exitcond1_i_fu_950_p2() {
    exitcond1_i_fu_950_p2 = (!cluster_1_reg_505.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<1>(): sc_lv<1>(cluster_1_reg_505.read() == ap_const_lv5_14);
}

void doKmean::thread_exitcond2_fu_733_p2() {
    exitcond2_fu_733_p2 = (!j_reg_400.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_400.read() == ap_const_lv6_32);
}

void doKmean::thread_exitcond3_fu_849_p2() {
    exitcond3_fu_849_p2 = (!i1_reg_411.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_411.read() == ap_const_lv5_14);
}

void doKmean::thread_exitcond4_fu_861_p2() {
    exitcond4_fu_861_p2 = (!j2_reg_434.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(j2_reg_434.read() == ap_const_lv6_32);
}

void doKmean::thread_exitcond5_fu_892_p2() {
    exitcond5_fu_892_p2 = (!i5_reg_445.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(i5_reg_445.read() == ap_const_lv10_3E8);
}

void doKmean::thread_exitcond6_fu_920_p2() {
    exitcond6_fu_920_p2 = (!i7_reg_457.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(i7_reg_457.read() == ap_const_lv10_3E8);
}

void doKmean::thread_exitcond7_fu_1130_p2() {
    exitcond7_fu_1130_p2 = (!i8_reg_551.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<1>(): sc_lv<1>(i8_reg_551.read() == ap_const_lv5_14);
}

void doKmean::thread_exitcond8_fu_1174_p2() {
    exitcond8_fu_1174_p2 = (!j9_reg_574.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(j9_reg_574.read() == ap_const_lv6_32);
}

void doKmean::thread_exitcond9_fu_1219_p2() {
    exitcond9_fu_1219_p2 = (!c_reg_586.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<1>(): sc_lv<1>(c_reg_586.read() == ap_const_lv5_14);
}

void doKmean::thread_exitcond_fu_1262_p2() {
    exitcond_fu_1262_p2 = (!idx_reg_620.read().is_01() || !ap_const_lv5_15.is_01())? sc_lv<1>(): sc_lv<1>(idx_reg_620.read() == ap_const_lv5_15);
}

void doKmean::thread_exitcond_i_fu_962_p2() {
    exitcond_i_fu_962_p2 = (!j_i_reg_540.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_540.read() == ap_const_lv6_32);
}

void doKmean::thread_f_1_fu_1242_p2() {
    f_1_fu_1242_p2 = (!f_reg_609.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(f_reg_609.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void doKmean::thread_gain_off1_fu_1153_p2() {
    gain_off1_fu_1153_p2 = (!gain_read_reg_1318.read().is_01() || !ap_const_lv32_FFFFFFFE.is_01())? sc_lv<32>(): (sc_biguint<32>(gain_read_reg_1318.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFE));
}

void doKmean::thread_gain_off_fu_712_p2() {
    gain_off_fu_712_p2 = (!gain_read_reg_1318.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(gain_read_reg_1318.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void doKmean::thread_grp_fu_1310_p0() {
    grp_fu_1310_p0 =  (sc_lv<7>) (ap_const_lv11_32);
}

void doKmean::thread_grp_fu_1310_p2() {
    grp_fu_1310_p2 =  (sc_lv<6>) (grp_fu_1310_p20.read());
}

void doKmean::thread_grp_fu_1310_p20() {
    grp_fu_1310_p20 = esl_zext<11,6>(j9_reg_574.read());
}

void doKmean::thread_grp_fu_631_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_631_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        grp_fu_631_opcode = ap_const_lv2_0;
    } else {
        grp_fu_631_opcode =  (sc_lv<2>) ("XX");
    }
}

void doKmean::thread_grp_fu_631_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_fu_631_p0 = reg_684.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_631_p0 = distance_i_reg_528.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_631_p0 = reg_671.read();
    } else {
        grp_fu_631_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void doKmean::thread_grp_fu_631_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_fu_631_p1 = reg_671.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_631_p1 = tmp_7_i_reg_1490.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_631_p1 = centroids_load_reg_1470.read();
    } else {
        grp_fu_631_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void doKmean::thread_i_1_fu_702_p2() {
    i_1_fu_702_p2 = (!i_reg_376.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_376.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void doKmean::thread_i_2_fu_855_p2() {
    i_2_fu_855_p2 = (!i1_reg_411.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i1_reg_411.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void doKmean::thread_i_3_fu_898_p2() {
    i_3_fu_898_p2 = (!i5_reg_445.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i5_reg_445.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void doKmean::thread_i_4_fu_926_p2() {
    i_4_fu_926_p2 = (!i7_reg_457.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i7_reg_457.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void doKmean::thread_i_5_fu_1136_p2() {
    i_5_fu_1136_p2 = (!i8_reg_551.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i8_reg_551.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void doKmean::thread_icmp1_fu_1168_p2() {
    icmp1_fu_1168_p2 = (!tmp_24_fu_1158_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_24_fu_1158_p4.read() == ap_const_lv31_0);
}

void doKmean::thread_icmp_fu_727_p2() {
    icmp_fu_727_p2 = (!tmp_fu_717_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_717_p4.read() == ap_const_lv31_0);
}

void doKmean::thread_idx_1_fu_1268_p2() {
    idx_1_fu_1268_p2 = (!idx_reg_620.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(idx_reg_620.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void doKmean::thread_inStream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        inStream_TDATA_blk_n = inStream_V_data_V_0_state.read()[0];
    } else {
        inStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void doKmean::thread_inStream_TREADY() {
    inStream_TREADY = inStream_V_dest_V_0_state.read()[1];
}

void doKmean::thread_inStream_V_data_V_0_ack_in() {
    inStream_V_data_V_0_ack_in = inStream_V_data_V_0_state.read()[1];
}

void doKmean::thread_inStream_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        inStream_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void doKmean::thread_inStream_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_sel.read())) {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B.read();
    } else {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A.read();
    }
}

void doKmean::thread_inStream_V_data_V_0_load_A() {
    inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full.read() & ~inStream_V_data_V_0_sel_wr.read());
}

void doKmean::thread_inStream_V_data_V_0_load_B() {
    inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr.read() & inStream_V_data_V_0_state_cmp_full.read());
}

void doKmean::thread_inStream_V_data_V_0_sel() {
    inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd.read();
}

void doKmean::thread_inStream_V_data_V_0_state_cmp_full() {
    inStream_V_data_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_inStream_V_data_V_0_vld_in() {
    inStream_V_data_V_0_vld_in = inStream_TVALID.read();
}

void doKmean::thread_inStream_V_data_V_0_vld_out() {
    inStream_V_data_V_0_vld_out = inStream_V_data_V_0_state.read()[0];
}

void doKmean::thread_inStream_V_dest_V_0_ack_in() {
    inStream_V_dest_V_0_ack_in = inStream_V_dest_V_0_state.read()[1];
}

void doKmean::thread_inStream_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        inStream_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void doKmean::thread_inStream_V_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_sel.read())) {
        inStream_V_dest_V_0_data_out = inStream_V_dest_V_0_payload_B.read();
    } else {
        inStream_V_dest_V_0_data_out = inStream_V_dest_V_0_payload_A.read();
    }
}

void doKmean::thread_inStream_V_dest_V_0_load_A() {
    inStream_V_dest_V_0_load_A = (inStream_V_dest_V_0_state_cmp_full.read() & ~inStream_V_dest_V_0_sel_wr.read());
}

void doKmean::thread_inStream_V_dest_V_0_load_B() {
    inStream_V_dest_V_0_load_B = (inStream_V_dest_V_0_sel_wr.read() & inStream_V_dest_V_0_state_cmp_full.read());
}

void doKmean::thread_inStream_V_dest_V_0_sel() {
    inStream_V_dest_V_0_sel = inStream_V_dest_V_0_sel_rd.read();
}

void doKmean::thread_inStream_V_dest_V_0_state_cmp_full() {
    inStream_V_dest_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_inStream_V_dest_V_0_vld_in() {
    inStream_V_dest_V_0_vld_in = inStream_TVALID.read();
}

void doKmean::thread_inStream_V_dest_V_0_vld_out() {
    inStream_V_dest_V_0_vld_out = inStream_V_dest_V_0_state.read()[0];
}

void doKmean::thread_inStream_V_id_V_0_ack_in() {
    inStream_V_id_V_0_ack_in = inStream_V_id_V_0_state.read()[1];
}

void doKmean::thread_inStream_V_id_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        inStream_V_id_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_id_V_0_ack_out = ap_const_logic_0;
    }
}

void doKmean::thread_inStream_V_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_id_V_0_sel.read())) {
        inStream_V_id_V_0_data_out = inStream_V_id_V_0_payload_B.read();
    } else {
        inStream_V_id_V_0_data_out = inStream_V_id_V_0_payload_A.read();
    }
}

void doKmean::thread_inStream_V_id_V_0_load_A() {
    inStream_V_id_V_0_load_A = (inStream_V_id_V_0_state_cmp_full.read() & ~inStream_V_id_V_0_sel_wr.read());
}

void doKmean::thread_inStream_V_id_V_0_load_B() {
    inStream_V_id_V_0_load_B = (inStream_V_id_V_0_sel_wr.read() & inStream_V_id_V_0_state_cmp_full.read());
}

void doKmean::thread_inStream_V_id_V_0_sel() {
    inStream_V_id_V_0_sel = inStream_V_id_V_0_sel_rd.read();
}

void doKmean::thread_inStream_V_id_V_0_state_cmp_full() {
    inStream_V_id_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_inStream_V_id_V_0_vld_in() {
    inStream_V_id_V_0_vld_in = inStream_TVALID.read();
}

void doKmean::thread_inStream_V_id_V_0_vld_out() {
    inStream_V_id_V_0_vld_out = inStream_V_id_V_0_state.read()[0];
}

void doKmean::thread_inStream_V_keep_V_0_ack_in() {
    inStream_V_keep_V_0_ack_in = inStream_V_keep_V_0_state.read()[1];
}

void doKmean::thread_inStream_V_keep_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        inStream_V_keep_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void doKmean::thread_inStream_V_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_keep_V_0_sel.read())) {
        inStream_V_keep_V_0_data_out = inStream_V_keep_V_0_payload_B.read();
    } else {
        inStream_V_keep_V_0_data_out = inStream_V_keep_V_0_payload_A.read();
    }
}

void doKmean::thread_inStream_V_keep_V_0_load_A() {
    inStream_V_keep_V_0_load_A = (inStream_V_keep_V_0_state_cmp_full.read() & ~inStream_V_keep_V_0_sel_wr.read());
}

void doKmean::thread_inStream_V_keep_V_0_load_B() {
    inStream_V_keep_V_0_load_B = (inStream_V_keep_V_0_sel_wr.read() & inStream_V_keep_V_0_state_cmp_full.read());
}

void doKmean::thread_inStream_V_keep_V_0_sel() {
    inStream_V_keep_V_0_sel = inStream_V_keep_V_0_sel_rd.read();
}

void doKmean::thread_inStream_V_keep_V_0_state_cmp_full() {
    inStream_V_keep_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_inStream_V_keep_V_0_vld_in() {
    inStream_V_keep_V_0_vld_in = inStream_TVALID.read();
}

void doKmean::thread_inStream_V_keep_V_0_vld_out() {
    inStream_V_keep_V_0_vld_out = inStream_V_keep_V_0_state.read()[0];
}

void doKmean::thread_inStream_V_strb_V_0_ack_in() {
    inStream_V_strb_V_0_ack_in = inStream_V_strb_V_0_state.read()[1];
}

void doKmean::thread_inStream_V_strb_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        inStream_V_strb_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_strb_V_0_ack_out = ap_const_logic_0;
    }
}

void doKmean::thread_inStream_V_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_strb_V_0_sel.read())) {
        inStream_V_strb_V_0_data_out = inStream_V_strb_V_0_payload_B.read();
    } else {
        inStream_V_strb_V_0_data_out = inStream_V_strb_V_0_payload_A.read();
    }
}

void doKmean::thread_inStream_V_strb_V_0_load_A() {
    inStream_V_strb_V_0_load_A = (inStream_V_strb_V_0_state_cmp_full.read() & ~inStream_V_strb_V_0_sel_wr.read());
}

void doKmean::thread_inStream_V_strb_V_0_load_B() {
    inStream_V_strb_V_0_load_B = (inStream_V_strb_V_0_sel_wr.read() & inStream_V_strb_V_0_state_cmp_full.read());
}

void doKmean::thread_inStream_V_strb_V_0_sel() {
    inStream_V_strb_V_0_sel = inStream_V_strb_V_0_sel_rd.read();
}

void doKmean::thread_inStream_V_strb_V_0_state_cmp_full() {
    inStream_V_strb_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_inStream_V_strb_V_0_vld_in() {
    inStream_V_strb_V_0_vld_in = inStream_TVALID.read();
}

void doKmean::thread_inStream_V_strb_V_0_vld_out() {
    inStream_V_strb_V_0_vld_out = inStream_V_strb_V_0_state.read()[0];
}

void doKmean::thread_inStream_V_user_V_0_ack_in() {
    inStream_V_user_V_0_ack_in = inStream_V_user_V_0_state.read()[1];
}

void doKmean::thread_inStream_V_user_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        inStream_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void doKmean::thread_inStream_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_user_V_0_sel.read())) {
        inStream_V_user_V_0_data_out = inStream_V_user_V_0_payload_B.read();
    } else {
        inStream_V_user_V_0_data_out = inStream_V_user_V_0_payload_A.read();
    }
}

void doKmean::thread_inStream_V_user_V_0_load_A() {
    inStream_V_user_V_0_load_A = (inStream_V_user_V_0_state_cmp_full.read() & ~inStream_V_user_V_0_sel_wr.read());
}

void doKmean::thread_inStream_V_user_V_0_load_B() {
    inStream_V_user_V_0_load_B = (inStream_V_user_V_0_sel_wr.read() & inStream_V_user_V_0_state_cmp_full.read());
}

void doKmean::thread_inStream_V_user_V_0_sel() {
    inStream_V_user_V_0_sel = inStream_V_user_V_0_sel_rd.read();
}

void doKmean::thread_inStream_V_user_V_0_state_cmp_full() {
    inStream_V_user_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_inStream_V_user_V_0_vld_in() {
    inStream_V_user_V_0_vld_in = inStream_TVALID.read();
}

void doKmean::thread_inStream_V_user_V_0_vld_out() {
    inStream_V_user_V_0_vld_out = inStream_V_user_V_0_state.read()[0];
}

void doKmean::thread_j_1_fu_739_p2() {
    j_1_fu_739_p2 = (!j_reg_400.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_400.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void doKmean::thread_j_2_fu_867_p2() {
    j_2_fu_867_p2 = (!j2_reg_434.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j2_reg_434.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void doKmean::thread_j_3_fu_1180_p2() {
    j_3_fu_1180_p2 = (!j9_reg_574.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j9_reg_574.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void doKmean::thread_j_4_fu_968_p2() {
    j_4_fu_968_p2 = (!j_i_reg_540.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_i_reg_540.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void doKmean::thread_min_distance_1_fu_1094_p3() {
    min_distance_1_fu_1094_p3 = (!tmp_37_fu_1081_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_37_fu_1081_p2.read()[0].to_bool())? distance_2_reg_1500.read(): min_distance_i_reg_493.read());
}

void doKmean::thread_min_distance_i_to_in_fu_1021_p1() {
    min_distance_i_to_in_fu_1021_p1 = min_distance_i_reg_493.read();
}

void doKmean::thread_new_centroids_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        new_centroids_address0 = new_centroids_addr_1_reg_1615.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        new_centroids_address0 =  (sc_lv<10>) (tmp_51_cast_fu_1258_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        new_centroids_address0 = new_centroids_addr_reg_1569.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        new_centroids_address0 =  (sc_lv<10>) (tmp_47_cast_fu_1209_p1.read());
    } else {
        new_centroids_address0 = "XXXXXXXXXX";
    }
}

void doKmean::thread_new_centroids_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()))) {
        new_centroids_ce0 = ap_const_logic_1;
    } else {
        new_centroids_ce0 = ap_const_logic_0;
    }
}

void doKmean::thread_new_centroids_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        new_centroids_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        new_centroids_d0 = reg_678.read();
    } else {
        new_centroids_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void doKmean::thread_new_centroids_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()))) {
        new_centroids_we0 = ap_const_logic_1;
    } else {
        new_centroids_we0 = ap_const_logic_0;
    }
}

void doKmean::thread_next_mul1_fu_1213_p2() {
    next_mul1_fu_1213_p2 = (!phi_mul9_reg_597.read().is_01() || !ap_const_lv10_32.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul9_reg_597.read()) + sc_biguint<10>(ap_const_lv10_32));
}

void doKmean::thread_next_mul2_fu_843_p2() {
    next_mul2_fu_843_p2 = (!phi_mul1_reg_422.read().is_01() || !ap_const_lv10_32.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul1_reg_422.read()) + sc_biguint<10>(ap_const_lv10_32));
}

void doKmean::thread_next_mul4_fu_940_p2() {
    next_mul4_fu_940_p2 = (!phi_mul3_reg_516.read().is_01() || !ap_const_lv10_32.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul3_reg_516.read()) + sc_biguint<10>(ap_const_lv10_32));
}

void doKmean::thread_next_mul6_fu_914_p2() {
    next_mul6_fu_914_p2 = (!phi_mul5_reg_468.read().is_01() || !ap_const_lv16_32.is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul5_reg_468.read()) + sc_biguint<16>(ap_const_lv16_32));
}

void doKmean::thread_next_mul8_fu_1124_p2() {
    next_mul8_fu_1124_p2 = (!phi_mul7_reg_562.read().is_01() || !ap_const_lv10_32.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul7_reg_562.read()) + sc_biguint<10>(ap_const_lv10_32));
}

void doKmean::thread_next_mul_fu_690_p2() {
    next_mul_fu_690_p2 = (!phi_mul_reg_388.read().is_01() || !ap_const_lv16_32.is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_388.read()) + sc_biguint<16>(ap_const_lv16_32));
}

void doKmean::thread_notlhs1_fu_1057_p2() {
    notlhs1_fu_1057_p2 = (!tmp_31_fu_1025_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_31_fu_1025_p4.read() != ap_const_lv8_FF);
}

void doKmean::thread_notlhs_fu_1039_p2() {
    notlhs_fu_1039_p2 = (!tmp_29_fu_1007_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_29_fu_1007_p4.read() != ap_const_lv8_FF);
}

void doKmean::thread_notrhs1_fu_1063_p2() {
    notrhs1_fu_1063_p2 = (!tmp_38_fu_1035_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_38_fu_1035_p1.read() == ap_const_lv23_0);
}

void doKmean::thread_notrhs_fu_1045_p2() {
    notrhs_fu_1045_p2 = (!tmp_32_fu_1017_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_32_fu_1017_p1.read() == ap_const_lv23_0);
}

void doKmean::thread_np_cluster_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_1)))) {
        np_cluster_address0 = np_cluster_addr_1_reg_1587.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        np_cluster_address0 = np_cluster_addr_reg_1520.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        np_cluster_address0 =  (sc_lv<5>) (tmp_12_fu_1112_p1.read());
    } else {
        np_cluster_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void doKmean::thread_np_cluster_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_1)))) {
        np_cluster_ce0 = ap_const_logic_1;
    } else {
        np_cluster_ce0 = ap_const_logic_0;
    }
}

void doKmean::thread_np_cluster_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
         esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_1))) {
        np_cluster_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        np_cluster_d0 = tmp_13_fu_1117_p2.read();
    } else {
        np_cluster_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void doKmean::thread_np_cluster_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_1)))) {
        np_cluster_we0 = ap_const_logic_1;
    } else {
        np_cluster_we0 = ap_const_logic_0;
    }
}

void doKmean::thread_outStream_TDATA() {
    outStream_TDATA = outStream_V_data_V_1_data_out.read();
}

void doKmean::thread_outStream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()))) {
        outStream_TDATA_blk_n = outStream_V_data_V_1_state.read()[1];
    } else {
        outStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void doKmean::thread_outStream_TDEST() {
    outStream_TDEST = outStream_V_dest_V_1_data_out.read();
}

void doKmean::thread_outStream_TID() {
    outStream_TID = outStream_V_id_V_1_data_out.read();
}

void doKmean::thread_outStream_TKEEP() {
    outStream_TKEEP = outStream_V_keep_V_1_data_out.read();
}

void doKmean::thread_outStream_TLAST() {
    outStream_TLAST = outStream_V_last_V_1_data_out.read();
}

void doKmean::thread_outStream_TSTRB() {
    outStream_TSTRB = outStream_V_strb_V_1_data_out.read();
}

void doKmean::thread_outStream_TUSER() {
    outStream_TUSER = outStream_V_user_V_1_data_out.read();
}

void doKmean::thread_outStream_TVALID() {
    outStream_TVALID = outStream_V_dest_V_1_state.read()[0];
}

void doKmean::thread_outStream_V_data_V_1_ack_in() {
    outStream_V_data_V_1_ack_in = outStream_V_data_V_1_state.read()[1];
}

void doKmean::thread_outStream_V_data_V_1_ack_out() {
    outStream_V_data_V_1_ack_out = outStream_TREADY.read();
}

void doKmean::thread_outStream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_sel.read())) {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B.read();
    } else {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A.read();
    }
}

void doKmean::thread_outStream_V_data_V_1_load_A() {
    outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full.read() & ~outStream_V_data_V_1_sel_wr.read());
}

void doKmean::thread_outStream_V_data_V_1_load_B() {
    outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr.read() & outStream_V_data_V_1_state_cmp_full.read());
}

void doKmean::thread_outStream_V_data_V_1_sel() {
    outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd.read();
}

void doKmean::thread_outStream_V_data_V_1_state_cmp_full() {
    outStream_V_data_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_outStream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
        outStream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void doKmean::thread_outStream_V_data_V_1_vld_out() {
    outStream_V_data_V_1_vld_out = outStream_V_data_V_1_state.read()[0];
}

void doKmean::thread_outStream_V_dest_V_1_ack_in() {
    outStream_V_dest_V_1_ack_in = outStream_V_dest_V_1_state.read()[1];
}

void doKmean::thread_outStream_V_dest_V_1_ack_out() {
    outStream_V_dest_V_1_ack_out = outStream_TREADY.read();
}

void doKmean::thread_outStream_V_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_sel.read())) {
        outStream_V_dest_V_1_data_out = outStream_V_dest_V_1_payload_B.read();
    } else {
        outStream_V_dest_V_1_data_out = outStream_V_dest_V_1_payload_A.read();
    }
}

void doKmean::thread_outStream_V_dest_V_1_load_A() {
    outStream_V_dest_V_1_load_A = (outStream_V_dest_V_1_state_cmp_full.read() & ~outStream_V_dest_V_1_sel_wr.read());
}

void doKmean::thread_outStream_V_dest_V_1_load_B() {
    outStream_V_dest_V_1_load_B = (outStream_V_dest_V_1_sel_wr.read() & outStream_V_dest_V_1_state_cmp_full.read());
}

void doKmean::thread_outStream_V_dest_V_1_sel() {
    outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd.read();
}

void doKmean::thread_outStream_V_dest_V_1_state_cmp_full() {
    outStream_V_dest_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_outStream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
        outStream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void doKmean::thread_outStream_V_dest_V_1_vld_out() {
    outStream_V_dest_V_1_vld_out = outStream_V_dest_V_1_state.read()[0];
}

void doKmean::thread_outStream_V_id_V_1_ack_in() {
    outStream_V_id_V_1_ack_in = outStream_V_id_V_1_state.read()[1];
}

void doKmean::thread_outStream_V_id_V_1_ack_out() {
    outStream_V_id_V_1_ack_out = outStream_TREADY.read();
}

void doKmean::thread_outStream_V_id_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_sel.read())) {
        outStream_V_id_V_1_data_out = outStream_V_id_V_1_payload_B.read();
    } else {
        outStream_V_id_V_1_data_out = outStream_V_id_V_1_payload_A.read();
    }
}

void doKmean::thread_outStream_V_id_V_1_load_A() {
    outStream_V_id_V_1_load_A = (outStream_V_id_V_1_state_cmp_full.read() & ~outStream_V_id_V_1_sel_wr.read());
}

void doKmean::thread_outStream_V_id_V_1_load_B() {
    outStream_V_id_V_1_load_B = (outStream_V_id_V_1_sel_wr.read() & outStream_V_id_V_1_state_cmp_full.read());
}

void doKmean::thread_outStream_V_id_V_1_sel() {
    outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd.read();
}

void doKmean::thread_outStream_V_id_V_1_state_cmp_full() {
    outStream_V_id_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_id_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_id_V_1_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_outStream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
        outStream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void doKmean::thread_outStream_V_id_V_1_vld_out() {
    outStream_V_id_V_1_vld_out = outStream_V_id_V_1_state.read()[0];
}

void doKmean::thread_outStream_V_keep_V_1_ack_in() {
    outStream_V_keep_V_1_ack_in = outStream_V_keep_V_1_state.read()[1];
}

void doKmean::thread_outStream_V_keep_V_1_ack_out() {
    outStream_V_keep_V_1_ack_out = outStream_TREADY.read();
}

void doKmean::thread_outStream_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_sel.read())) {
        outStream_V_keep_V_1_data_out = outStream_V_keep_V_1_payload_B.read();
    } else {
        outStream_V_keep_V_1_data_out = outStream_V_keep_V_1_payload_A.read();
    }
}

void doKmean::thread_outStream_V_keep_V_1_load_A() {
    outStream_V_keep_V_1_load_A = (outStream_V_keep_V_1_state_cmp_full.read() & ~outStream_V_keep_V_1_sel_wr.read());
}

void doKmean::thread_outStream_V_keep_V_1_load_B() {
    outStream_V_keep_V_1_load_B = (outStream_V_keep_V_1_sel_wr.read() & outStream_V_keep_V_1_state_cmp_full.read());
}

void doKmean::thread_outStream_V_keep_V_1_sel() {
    outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd.read();
}

void doKmean::thread_outStream_V_keep_V_1_state_cmp_full() {
    outStream_V_keep_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_outStream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
        outStream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void doKmean::thread_outStream_V_keep_V_1_vld_out() {
    outStream_V_keep_V_1_vld_out = outStream_V_keep_V_1_state.read()[0];
}

void doKmean::thread_outStream_V_last_V_1_ack_in() {
    outStream_V_last_V_1_ack_in = outStream_V_last_V_1_state.read()[1];
}

void doKmean::thread_outStream_V_last_V_1_ack_out() {
    outStream_V_last_V_1_ack_out = outStream_TREADY.read();
}

void doKmean::thread_outStream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_sel.read())) {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B.read();
    } else {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A.read();
    }
}

void doKmean::thread_outStream_V_last_V_1_load_A() {
    outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full.read() & ~outStream_V_last_V_1_sel_wr.read());
}

void doKmean::thread_outStream_V_last_V_1_load_B() {
    outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr.read() & outStream_V_last_V_1_state_cmp_full.read());
}

void doKmean::thread_outStream_V_last_V_1_sel() {
    outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd.read();
}

void doKmean::thread_outStream_V_last_V_1_state_cmp_full() {
    outStream_V_last_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_outStream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
        outStream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void doKmean::thread_outStream_V_last_V_1_vld_out() {
    outStream_V_last_V_1_vld_out = outStream_V_last_V_1_state.read()[0];
}

void doKmean::thread_outStream_V_strb_V_1_ack_in() {
    outStream_V_strb_V_1_ack_in = outStream_V_strb_V_1_state.read()[1];
}

void doKmean::thread_outStream_V_strb_V_1_ack_out() {
    outStream_V_strb_V_1_ack_out = outStream_TREADY.read();
}

void doKmean::thread_outStream_V_strb_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_sel.read())) {
        outStream_V_strb_V_1_data_out = outStream_V_strb_V_1_payload_B.read();
    } else {
        outStream_V_strb_V_1_data_out = outStream_V_strb_V_1_payload_A.read();
    }
}

void doKmean::thread_outStream_V_strb_V_1_load_A() {
    outStream_V_strb_V_1_load_A = (outStream_V_strb_V_1_state_cmp_full.read() & ~outStream_V_strb_V_1_sel_wr.read());
}

void doKmean::thread_outStream_V_strb_V_1_load_B() {
    outStream_V_strb_V_1_load_B = (outStream_V_strb_V_1_sel_wr.read() & outStream_V_strb_V_1_state_cmp_full.read());
}

void doKmean::thread_outStream_V_strb_V_1_sel() {
    outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd.read();
}

void doKmean::thread_outStream_V_strb_V_1_state_cmp_full() {
    outStream_V_strb_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_strb_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_strb_V_1_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_outStream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
        outStream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void doKmean::thread_outStream_V_strb_V_1_vld_out() {
    outStream_V_strb_V_1_vld_out = outStream_V_strb_V_1_state.read()[0];
}

void doKmean::thread_outStream_V_user_V_1_ack_in() {
    outStream_V_user_V_1_ack_in = outStream_V_user_V_1_state.read()[1];
}

void doKmean::thread_outStream_V_user_V_1_ack_out() {
    outStream_V_user_V_1_ack_out = outStream_TREADY.read();
}

void doKmean::thread_outStream_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_sel.read())) {
        outStream_V_user_V_1_data_out = outStream_V_user_V_1_payload_B.read();
    } else {
        outStream_V_user_V_1_data_out = outStream_V_user_V_1_payload_A.read();
    }
}

void doKmean::thread_outStream_V_user_V_1_load_A() {
    outStream_V_user_V_1_load_A = (outStream_V_user_V_1_state_cmp_full.read() & ~outStream_V_user_V_1_sel_wr.read());
}

void doKmean::thread_outStream_V_user_V_1_load_B() {
    outStream_V_user_V_1_load_B = (outStream_V_user_V_1_sel_wr.read() & outStream_V_user_V_1_state_cmp_full.read());
}

void doKmean::thread_outStream_V_user_V_1_sel() {
    outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd.read();
}

void doKmean::thread_outStream_V_user_V_1_state_cmp_full() {
    outStream_V_user_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void doKmean::thread_outStream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
        outStream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void doKmean::thread_outStream_V_user_V_1_vld_out() {
    outStream_V_user_V_1_vld_out = outStream_V_user_V_1_state.read()[0];
}

void doKmean::thread_points_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        points_address0 =  (sc_lv<16>) (tmp_49_cast_fu_999_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        points_address0 =  (sc_lv<16>) (tmp_39_cast_fu_809_p1.read());
    } else {
        points_address0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void doKmean::thread_points_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        points_address1 =  (sc_lv<16>) (tmp_45_cast_fu_1204_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        points_address1 =  (sc_lv<16>) (tmp_49_cast_fu_999_p1.read());
    } else {
        points_address1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void doKmean::thread_points_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        points_ce0 = ap_const_logic_1;
    } else {
        points_ce0 = ap_const_logic_0;
    }
}

void doKmean::thread_points_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        points_ce1 = ap_const_logic_1;
    } else {
        points_ce1 = ap_const_logic_0;
    }
}

void doKmean::thread_points_d0() {
    points_d0 = inStream_V_data_V_0_data_out.read();
}

void doKmean::thread_points_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
        points_we0 = ap_const_logic_1;
    } else {
        points_we0 = ap_const_logic_0;
    }
}

void doKmean::thread_results_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        results_address0 =  (sc_lv<10>) (tmp_21_fu_1274_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        results_address0 = results_addr_2_reg_1538.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        results_address0 = ap_const_lv10_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        results_address0 = results_addr_1_reg_1445.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        results_address0 =  (sc_lv<10>) (tmp_8_reg_1417.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        results_address0 =  (sc_lv<10>) (tmp_7_fu_909_p1.read());
    } else {
        results_address0 = "XXXXXXXXXX";
    }
}

void doKmean::thread_results_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
          !(esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        results_ce0 = ap_const_logic_1;
    } else {
        results_ce0 = ap_const_logic_0;
    }
}

void doKmean::thread_results_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        results_d0 = end_cast_reg_1422.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        results_d0 = cluster_reg_480.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        results_d0 = inStream_V_data_V_0_data_out.read();
    } else {
        results_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void doKmean::thread_results_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(exitcond7_fu_1130_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_1101_p2.read())))) {
        results_we0 = ap_const_logic_1;
    } else {
        results_we0 = ap_const_logic_0;
    }
}

void doKmean::thread_tmp_10_fu_1147_p2() {
    tmp_10_fu_1147_p2 = (!end_fu_174.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(end_fu_174.read() == ap_const_lv2_0);
}

void doKmean::thread_tmp_11_fu_1142_p1() {
    tmp_11_fu_1142_p1 = esl_zext<64,5>(i8_reg_551.read());
}

void doKmean::thread_tmp_12_fu_1112_p1() {
    tmp_12_fu_1112_p1 = esl_sext<64,32>(cluster_reg_480.read());
}

void doKmean::thread_tmp_13_fu_1117_p2() {
    tmp_13_fu_1117_p2 = (!np_cluster_q0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(np_cluster_q0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void doKmean::thread_tmp_14_cast_fu_1194_p1() {
    tmp_14_cast_fu_1194_p1 = esl_zext<10,6>(j9_reg_574.read());
}

void doKmean::thread_tmp_14_fu_755_p2() {
    tmp_14_fu_755_p2 = (tmp_4_reg_1337.read() | j_reg_400.read());
}

void doKmean::thread_tmp_15_fu_760_p4() {
    tmp_15_fu_760_p4 = i_reg_376.read().range(9, 6);
}

void doKmean::thread_tmp_17_fu_1231_p1() {
    tmp_17_fu_1231_p1 = esl_zext<64,5>(c_reg_586.read());
}

void doKmean::thread_tmp_18_cast_fu_1248_p1() {
    tmp_18_cast_fu_1248_p1 = esl_zext<10,6>(f_reg_609.read());
}

void doKmean::thread_tmp_1_cast_fu_745_p1() {
    tmp_1_cast_fu_745_p1 = esl_zext<16,6>(j_reg_400.read());
}

void doKmean::thread_tmp_21_fu_1274_p1() {
    tmp_21_fu_1274_p1 = esl_zext<64,5>(idx_reg_620.read());
}

void doKmean::thread_tmp_22_fu_877_p2() {
    tmp_22_fu_877_p2 = (!phi_mul1_reg_422.read().is_01() || !tmp_6_cast_fu_873_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul1_reg_422.read()) + sc_biguint<10>(tmp_6_cast_fu_873_p1.read()));
}

void doKmean::thread_tmp_24_fu_1158_p4() {
    tmp_24_fu_1158_p4 = gain_off1_fu_1153_p2.read().range(31, 1);
}

void doKmean::thread_tmp_26_fu_1198_p2() {
    tmp_26_fu_1198_p2 = (!tmp_14_cast_fu_1194_p1.read().is_01() || !phi_mul7_reg_562.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_14_cast_fu_1194_p1.read()) + sc_biguint<10>(phi_mul7_reg_562.read()));
}

void doKmean::thread_tmp_27_fu_1186_p1() {
    tmp_27_fu_1186_p1 = results_q0.read().range(11-1, 0);
}

void doKmean::thread_tmp_29_fu_1007_p4() {
    tmp_29_fu_1007_p4 = distance_1_to_int_fu_1004_p1.read().range(30, 23);
}

void doKmean::thread_tmp_2_fu_770_p3() {
    tmp_2_fu_770_p3 = esl_concat<4,6>(tmp_15_fu_760_p4.read(), tmp_14_fu_755_p2.read());
}

void doKmean::thread_tmp_31_fu_1025_p4() {
    tmp_31_fu_1025_p4 = min_distance_i_to_in_fu_1021_p1.read().range(30, 23);
}

void doKmean::thread_tmp_32_fu_1017_p1() {
    tmp_32_fu_1017_p1 = distance_1_to_int_fu_1004_p1.read().range(23-1, 0);
}

void doKmean::thread_tmp_33_fu_1051_p2() {
    tmp_33_fu_1051_p2 = (notrhs_fu_1045_p2.read() | notlhs_fu_1039_p2.read());
}

void doKmean::thread_tmp_34_fu_1069_p2() {
    tmp_34_fu_1069_p2 = (notrhs1_fu_1063_p2.read() | notlhs1_fu_1057_p2.read());
}

void doKmean::thread_tmp_35_fu_1075_p2() {
    tmp_35_fu_1075_p2 = (tmp_33_fu_1051_p2.read() & tmp_34_fu_1069_p2.read());
}

void doKmean::thread_tmp_37_fu_1081_p2() {
    tmp_37_fu_1081_p2 = (tmp_35_fu_1075_p2.read() & tmp_36_fu_652_p2.read());
}

void doKmean::thread_tmp_38_fu_1035_p1() {
    tmp_38_fu_1035_p1 = min_distance_i_to_in_fu_1021_p1.read().range(23-1, 0);
}

void doKmean::thread_tmp_39_cast_fu_809_p1() {
    tmp_39_cast_fu_809_p1 = esl_zext<64,16>(tmp_6_reg_1354.read());
}

void doKmean::thread_tmp_39_fu_982_p2() {
    tmp_39_fu_982_p2 = (!phi_mul3_reg_516.read().is_01() || !tmp_4_i_cast_fu_978_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul3_reg_516.read()) + sc_biguint<10>(tmp_4_i_cast_fu_978_p1.read()));
}

void doKmean::thread_tmp_3_fu_778_p2() {
    tmp_3_fu_778_p2 = (!tmp_2_fu_770_p3.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_770_p3.read() == ap_const_lv10_0);
}

void doKmean::thread_tmp_40_fu_993_p2() {
    tmp_40_fu_993_p2 = (!phi_mul5_reg_468.read().is_01() || !tmp_4_i_cast1_fu_974_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul5_reg_468.read()) + sc_biguint<16>(tmp_4_i_cast1_fu_974_p1.read()));
}

void doKmean::thread_tmp_41_cast_fu_888_p1() {
    tmp_41_cast_fu_888_p1 = esl_zext<64,10>(tmp_22_reg_1384.read());
}

void doKmean::thread_tmp_41_fu_1252_p2() {
    tmp_41_fu_1252_p2 = (!phi_mul9_reg_597.read().is_01() || !tmp_18_cast_fu_1248_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul9_reg_597.read()) + sc_biguint<10>(tmp_18_cast_fu_1248_p1.read()));
}

void doKmean::thread_tmp_45_cast_fu_1204_p1() {
    tmp_45_cast_fu_1204_p1 = esl_zext<64,10>(tmp_26_fu_1198_p2.read());
}

void doKmean::thread_tmp_47_cast_fu_1209_p1() {
    tmp_47_cast_fu_1209_p1 = esl_sext<64,11>(grp_fu_1310_p3.read());
}

void doKmean::thread_tmp_48_cast_fu_988_p1() {
    tmp_48_cast_fu_988_p1 = esl_zext<64,10>(tmp_39_fu_982_p2.read());
}

void doKmean::thread_tmp_49_cast_fu_999_p1() {
    tmp_49_cast_fu_999_p1 = esl_zext<64,16>(tmp_40_fu_993_p2.read());
}

void doKmean::thread_tmp_4_fu_708_p1() {
    tmp_4_fu_708_p1 = i_reg_376.read().range(6-1, 0);
}

void doKmean::thread_tmp_4_i_cast1_fu_974_p1() {
    tmp_4_i_cast1_fu_974_p1 = esl_zext<16,6>(j_i_reg_540.read());
}

void doKmean::thread_tmp_4_i_cast_fu_978_p1() {
    tmp_4_i_cast_fu_978_p1 = esl_zext<10,6>(j_i_reg_540.read());
}

void doKmean::thread_tmp_51_cast_fu_1258_p1() {
    tmp_51_cast_fu_1258_p1 = esl_zext<64,10>(tmp_41_reg_1600.read());
}

void doKmean::thread_tmp_6_cast_fu_873_p1() {
    tmp_6_cast_fu_873_p1 = esl_zext<10,6>(j2_reg_434.read());
}

void doKmean::thread_tmp_6_fu_749_p2() {
    tmp_6_fu_749_p2 = (!phi_mul_reg_388.read().is_01() || !tmp_1_cast_fu_745_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_388.read()) + sc_biguint<16>(tmp_1_cast_fu_745_p1.read()));
}

void doKmean::thread_tmp_7_fu_909_p1() {
    tmp_7_fu_909_p1 = esl_zext<64,10>(i5_reg_445.read());
}

void doKmean::thread_tmp_8_fu_932_p1() {
    tmp_8_fu_932_p1 = esl_zext<64,10>(i7_reg_457.read());
}

void doKmean::thread_tmp_9_fu_1101_p2() {
    tmp_9_fu_1101_p2 = (!cluster_reg_480.read().is_01() || !results_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(cluster_reg_480.read() == results_q0.read());
}

void doKmean::thread_tmp_fu_717_p4() {
    tmp_fu_717_p4 = gain_off_fu_712_p2.read().range(31, 1);
}

void doKmean::thread_valOut_last_V_fu_1279_p2() {
    valOut_last_V_fu_1279_p2 = (!idx_reg_620.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<1>(): sc_lv<1>(idx_reg_620.read() == ap_const_lv5_14);
}

void doKmean::thread_ap_NS_fsm() {
    if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_696_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state5;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_733_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && (esl_seteq<1,1,1>(exitcond3_fu_849_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(icmp_reg_1342.read(), ap_const_lv1_0)))) {
            ap_NS_fsm = ap_ST_fsm_state8;
        } else {
            ap_NS_fsm = ap_ST_fsm_state6;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond4_fu_861_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state5;
        } else {
            ap_NS_fsm = ap_ST_fsm_state7;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state6;
        } else {
            ap_NS_fsm = ap_ST_fsm_state7;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(exitcond5_fu_892_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state10;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state8;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond6_fu_920_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state11;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_950_p2.read(), ap_const_lv1_0))) {
            ap_NS_fsm = ap_ST_fsm_state12;
        } else {
            ap_NS_fsm = ap_ST_fsm_state40;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond_i_fu_962_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state28;
        } else {
            ap_NS_fsm = ap_ST_fsm_state13;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(exitcond7_fu_1130_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state53;
        } else {
            ap_NS_fsm = ap_ST_fsm_state43;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && esl_seteq<1,1,1>(exitcond8_fu_1174_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state44;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && (esl_seteq<1,1,1>(exitcond9_fu_1219_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(icmp1_reg_1547.read(), ap_const_lv1_0) || 
  esl_seteq<1,1,1>(tmp_10_reg_1543.read(), ap_const_lv1_0)))) {
            ap_NS_fsm = ap_ST_fsm_state78;
        } else {
            ap_NS_fsm = ap_ST_fsm_state54;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && esl_seteq<1,1,1>(exitcond10_fu_1236_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state53;
        } else {
            ap_NS_fsm = ap_ST_fsm_state55;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        if ((!(esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && esl_seteq<1,1,1>(exitcond_fu_1262_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else if ((!(esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && esl_seteq<1,1,1>(exitcond_fu_1262_p2.read(), ap_const_lv1_0))) {
            ap_NS_fsm = ap_ST_fsm_state79;
        } else {
            ap_NS_fsm = ap_ST_fsm_state78;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
            ap_NS_fsm = ap_ST_fsm_state80;
        } else {
            ap_NS_fsm = ap_ST_fsm_state79;
        }
    }
    else if (esl_seteq<1,80,80>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        if ((esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()))) {
            ap_NS_fsm = ap_ST_fsm_state78;
        } else {
            ap_NS_fsm = ap_ST_fsm_state80;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<80>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void doKmean::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDATA\" :  \"" << inStream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TVALID\" :  \"" << inStream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"inStream_TREADY\" :  \"" << inStream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TKEEP\" :  \"" << inStream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TSTRB\" :  \"" << inStream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TUSER\" :  \"" << inStream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TLAST\" :  \"" << inStream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TID\" :  \"" << inStream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDEST\" :  \"" << inStream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDATA\" :  \"" << outStream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TVALID\" :  \"" << outStream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_TREADY\" :  \"" << outStream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TKEEP\" :  \"" << outStream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TSTRB\" :  \"" << outStream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TUSER\" :  \"" << outStream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TLAST\" :  \"" << outStream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TID\" :  \"" << outStream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDEST\" :  \"" << outStream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWVALID\" :  \"" << s_axi_CRTL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_AWREADY\" :  \"" << s_axi_CRTL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWADDR\" :  \"" << s_axi_CRTL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WVALID\" :  \"" << s_axi_CRTL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_WREADY\" :  \"" << s_axi_CRTL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WDATA\" :  \"" << s_axi_CRTL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WSTRB\" :  \"" << s_axi_CRTL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARVALID\" :  \"" << s_axi_CRTL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_ARREADY\" :  \"" << s_axi_CRTL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARADDR\" :  \"" << s_axi_CRTL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RVALID\" :  \"" << s_axi_CRTL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_RREADY\" :  \"" << s_axi_CRTL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RDATA\" :  \"" << s_axi_CRTL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RRESP\" :  \"" << s_axi_CRTL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BVALID\" :  \"" << s_axi_CRTL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_BREADY\" :  \"" << s_axi_CRTL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BRESP\" :  \"" << s_axi_CRTL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

