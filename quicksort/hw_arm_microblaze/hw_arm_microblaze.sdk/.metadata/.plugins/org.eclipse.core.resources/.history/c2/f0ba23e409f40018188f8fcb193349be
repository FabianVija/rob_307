#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "ff.h" // right click in the bsp project, settings, add the ff library !!!!!!!
#include "xparameters.h"
#include "xil_printf.h"
#include "xil_io.h"
#include "xtmrctr.h"

int main(){

	printf("Runing...");
	/*XTmrCtr timer;
	XTmrCtr_Initialize(&timer, XPAR_TMRCTR_0_DEVICE_ID);

	uint32_t readStartTime;
	uint32_t readStopTime;
	uint32_t calculStartTime;
	uint32_t calculStopTime;
	float calculTime = 0;
	float readTime =0;
	double calculClock= 0;
	double readClock = 0;*/
/*
	int i;
	for (i=0;i<N_TESTS;i++){
		//--------------------------------------- Card
		// mount sd card
		TCHAR *Path = "0:/";
		FRESULT  result;
		result = f_mount(&FS_instance,Path, 0);
		if (result != FR_OK) {
			printf("Cannot mount sd\n");
			return EXIT_FAILURE;
		}
		//printf("sd card ok \n");

		printf("n=%d\n",i);
		//XTmrCtr_Reset(&timer, 0);
		//XTmrCtr_Start(&timer, 0);
		//readStartTime = XTmrCtr_GetValue(&timer,0);
		//--------------------------------------- Read data

		//printf("reading...\n");
		createVector(fileName);
		//printf("reade done\n");

		//-------------------------------------- Sorting

		//printf("sorting...\n");
		//calculStartTime = XTmrCtr_GetValue(&timer,0);
		quickSortIterative(vector,0,N_POINTS);
		//calculStopTime = XTmrCtr_GetValue(&timer,0);
		//readStopTime = XTmrCtr_GetValue(&timer,0);
		//printf("sort done\n");

		//-------------------------------------- Time

		printArr(vector,N_POINTS);


		XTmrCtr_Stop(&timer, 0);

		calculClock += (calculStopTime - calculStartTime);
		readClock += (readStopTime - readStartTime);
		calculTime += ((calculStopTime - calculStartTime) / (XPAR_TMRCTR_0_CLOCK_FREQ_HZ / (double) 1000.0));
		readTime += ((readStopTime - readStartTime) / (XPAR_TMRCTR_0_CLOCK_FREQ_HZ / (double) 1000.0));
*///	}

	/*calculClock = calculClock/N_TESTS;
	readClock = readClock/N_TESTS;
	calculTime = calculTime/N_TESTS;
	readTime = readTime/N_TESTS;

	printf("Number of tests: %d\n",N_TESTS);
	printf("Size of vector: %d\n",N_POINTS);
	printf("Time of calcul: %f ms\n",calculTime);
	printf("Clocks of calcul: %f\n", calculClock);
	printf("Time total: %f ms\n",readTime);
	printf("Clocks total: %f\n", readClock);
*/
	printf("done \n");
	//f_mount(NULL,0, 0);
	return 0;

}
